{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","images/edit-avatar.svg","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/ImagePopup.js","utils/api.js","components/ConfirmPopup.js","components/AddPlacePopup.js","components/Popup.js","images/register-ok.svg","images/register-fail.svg","components/InfoTooltip.js","components/Register.js","components/Login.js","components/ProtectedRoute.js","components/MainRoute.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","logo","alt","exact","path","to","loggedIn","email","onClick","onSignOut","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onConfirmDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","type","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","handleChangeName","cardList","map","avatar","photoEdit","about","Footer","PopupWithForm","title","value","isOpen","onClose","handleSubmit","children","formValid","noValidate","onSubmit","disabled","EditProfilePopup","onUpdateUser","valueInput","nameError","descriptionError","handleChangeDescription","useState","setName","description","setDescription","useEffect","event","preventDefault","onChange","target","id","minLength","maxLength","required","autoComplete","EditAvatarPopup","onUpdateAvatar","handleChangeLinks","avatarRef","useRef","current","placeholder","ref","ImagePopup","api","baseUrl","headers","this","_url","_headers","fetch","method","then","res","_addResult","jwt","body","JSON","stringify","cardId","noIsLiked","url","ok","json","Promise","reject","status","localStorage","getItem","ConfirmPopup","onCardDelete","AddPlacePopup","setLink","Popup","handleEscapeClose","key","document","addEventListener","removeEventListener","onMouseDown","e","classList","contains","InfoTooltip","imageOk","imageFail","Register","password","data","setData","popupMessage","setPopupMessage","isRegisterPopup","setIsRegisterPopup","submitStatus","setSubmitStatus","history","useHistory","push","onRegister","catch","finally","Login","currentEmail","currentPassword","isLoginPopup","setIsLoginPopup","onLogin","checkToken","ProtectedRoute","Component","component","MainRoute","isChecked","auth","baseURL","Error","message","error","_getResponseData","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","deleteCard","setDeleteCard","setCurrentUser","setCards","submit","confirm","setValueInput","setNameError","setDescriptionError","setFormValid","nameValid","setNameValid","descriptionValid","setDescriptionValid","setLoggedIn","setIsChecked","getUserInfo","user","console","getInitialCards","err","log","validity","valid","validationMessage","checkexp","test","closeAllPopups","handleEscClose","handleClickOnOverlay","popup","querySelector","Provider","removeItem","changeLikeCardStatus","newCard","newCards","c","register","login","setItem","token","filter","addNewCard","setUserAvatar","setUserInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.26fe24da.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import {Link, Route, Switch} from \"react-router-dom\";\nimport logo from \"../images/logo.svg\";\n\nfunction Header(props) {\n\n    return (\n        <header className=\"header section\">\n            <img\n                className=\"header__logo\"\n                src={logo}\n                alt=\"Логотип Mesto Russia\"\n            />\n            <Switch>\n                <Route exact path=\"/sign-in\">\n                    <Link className=\"header__link\" to=\"/sign-up\">\n                        Регистрация\n                    </Link>\n                </Route>\n                <Route exact path=\"/sign-up\">\n                    <Link className=\"header__link\" to=\"/sign-in\">\n                        Войти\n                    </Link>\n                </Route>\n                <Route path=\"/\">\n                    <div className=\"header__right-block\">\n                        {props.loggedIn && (\n                            <p className=\"header__email\">{props.email}</p>\n                        )}\n                        {props.email && (\n                            <Link\n                                className=\"header__sign-out\"\n                                to=\"/sign-up\"\n                                onClick={props.onSignOut}\n                            >\n                                Выйти\n                            </Link>\n                        )}\n                    </div>\n                </Route>\n            </Switch>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Card({ card, onCardClick, onCardLike, onConfirmDelete }) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const isOwn = card.owner === currentUser._id;\n    const cardDeleteButtonClassName = (\n        `${isOwn ? 'element__delete-button buttons' : 'element__delete-button_hidden'}`\n    )\n        \n    const isLiked = card.likes.some(i => i === currentUser._id);\n    const cardLikeButtonClassName = (\n        `element__like-button buttons ${isLiked ? 'element__like-button_active' : ''}`\n    )\n\n    function handleClick() {\n        onCardClick(card);\n    }\n\n    function handleLikeClick() {\n        onCardLike(card)\n    }\n\n    function handleDeleteClick() {\n        onConfirmDelete(card);\n    }\n\n    return (\n        <li className=\"elements__item\">\n            <figure className=\"element\">\n                <img\n                    src={card.link}\n                    alt={card.name}\n                    className=\"element__image\"\n                    onClick={handleClick}\n                />\n                <div className=\"element__body\">\n                    <p className=\"element__figcaption section__subtitle\">\n                        {card.name}\n                    </p>\n                    <div className=\"element__like-group\">\n                        <button\n                            className={cardLikeButtonClassName}\n                            type=\"button\"\n                            onClick={handleLikeClick}\n                        ></button>\n                        <div className=\"element__like-count\">\n                            {card.likes.length}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    className={cardDeleteButtonClassName}\n                    type=\"button\"\n                    onClick={handleDeleteClick}\n                ></button>\n            </figure>\n        </li>\n    );\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/edit-avatar.a086f758.svg\";","import React from \"react\";\nimport Card from \"./Card\";\nimport photoEdit from \"../images/edit-avatar.svg\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Main({\n    onEditProfile,\n    onAddPlace,\n    onEditAvatar,\n    onCardClick,\n    cards,\n    onCardLike,\n    onConfirmDelete,\n    handleChangeName\n}) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    //  Запись данных карточки в шаблон\n    const cardList = cards.map((card) => (\n        \n        <Card\n            key={card._id}\n            card={card}\n            onCardClick={onCardClick}\n            onCardLike={onCardLike}\n            onConfirmDelete={onConfirmDelete}\n        />\n    ));\n\n\n    return (\n        <main className=\"content section section__content\">\n            <section className=\"profile section__profile\">\n                <div className=\"profile__wrap\">\n                    <img\n                        src={currentUser.avatar}\n                        alt={currentUser.name}\n                        className=\"profile__avatar\"\n                    />\n\n                    <img\n                        src={photoEdit}\n                        alt=\"Смена аватара\"\n                        className=\"profile__avatar-edit\"\n                        onClick={onEditAvatar}\n                    />\n                </div>\n\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__author section__title\">\n                        {currentUser.name}\n                    </h1>\n                    <button\n                        type=\"button\"\n                        className=\"profile__edit-button buttons\"\n                        onClick={onEditProfile}\n                    ></button>\n                    <p className=\"profile__author-status section__subtitle\">\n                        {currentUser.about}\n                    </p>\n                </div>\n                <button\n                    type=\"button\"\n                    className=\"profile__add-button buttons\"\n                    onClick={onAddPlace}\n                ></button>\n            </section>\n\n            <section className=\"elements\">\n                <ul className=\"elements__list\">{cardList}</ul>\n            </section>\n        </main>\n    );\n}\n\nexport default Main;\n","function Footer() {\n    return (\n        <footer className=\"footer section section__footer\">\n            <p className=\"section__text\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;\n","function PopupWithForm({\n    name,\n    title,\n    value,\n    isOpen,\n    onClose,\n    handleSubmit,\n    children,\n    formValid,\n}) {\n    return (\n        <section\n            className={`popup section__popup popup_type_${name} ${\n                isOpen ? \"popup_opened\" : \"\"\n            }`}\n        >\n            <div className=\"popup__container\">\n                <form\n                    name={name}\n                    className={`popup__form popup__form_type_${name}`}\n                    noValidate\n                    onSubmit={handleSubmit}\n                >\n                    <h2 className=\"popup__heading section__subtitle\">\n                        {title}\n                    </h2>\n                    <fieldset className=\"popup__fields\">{children}</fieldset>\n                    <input\n                        name=\"save-button\"\n                        type=\"submit\"\n                        value={value}\n                        className={`popup__save-button ${\n                            !formValid ? \"popup__save-button_invalid\" : \"\"\n                        }`}\n                        disabled={!formValid}\n                    />\n                    <button\n                        name=\"close-button\"\n                        type=\"button\"\n                        className=\"popup__close-button buttons\"\n                        onClick={onClose}\n                    ></button>\n                </form>\n            </div>\n        </section>\n    );\n}\n\nexport default PopupWithForm;\n","import { useState, useContext, useEffect } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditProfilePopup({\n    isOpen,\n    onClose,\n    onUpdateUser,\n    valueInput,\n    nameError,\n    descriptionError,\n    handleChangeName,\n    handleChangeDescription,\n    formValid\n}) {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const currentUser = useContext(CurrentUserContext);\n\n    useEffect(() => { \n        setName(currentUser.name); \n        setDescription(currentUser.about); \n    }, [isOpen, currentUser]);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n            onUpdateUser({\n                name,\n                about: description,\n            });\n    }\n    return (\n        <PopupWithForm\n            name=\"popup-edit-profile\"\n            title=\"Редактировать профиль\"\n            value={valueInput}\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}\n            formValid={formValid}\n        >\n            <input\n                name=\"name\"\n                type=\"text\"\n                value={name || \"\"}\n                onChange={(event) => {\n                    handleChangeName(event);\n                    setName(event.target.value);\n                }}\n                className={`popup__input popup__input_name ${\n                    nameError ? \"popup__input_state_invalid\" : \"\"\n                }`}\n                id=\"user-name\"\n                minLength=\"2\"\n                maxLength=\"40\"\n                required\n                autoComplete=\"off\"\n            />\n            <span id=\"user-name-error\" className=\"error\">\n                {nameError}\n            </span>\n\n            <input\n                name=\"job\"\n                type=\"text\"\n                value={description || \"\"}\n                onChange={(event) => {\n                    handleChangeDescription(event);\n                    setDescription(event.target.value);\n                }}\n                className={`popup__input popup__input_job ${\n                    descriptionError ? \"popup__input_state_invalid\" : \"\"\n                }`}\n                id=\"about\"\n                minLength=\"2\"\n                maxLength=\"200\"\n                required\n                autoComplete=\"off\"\n            />\n            <span id=\"about-error\" className=\"error\">\n                {descriptionError}\n            </span>\n        </PopupWithForm>\n    );\n}\n\nexport default EditProfilePopup;\n","import { useEffect, useRef } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({\n    isOpen,\n    onClose,\n    onUpdateAvatar,\n    valueInput,\n    descriptionError,\n    handleChangeLinks,\n    formValid\n}) {\n    const avatarRef = useRef();\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        onUpdateAvatar({\n            avatar: avatarRef.current.value,\n        });\n    }\n    useEffect(() => {\n        avatarRef.current.value = '';\n    }, [isOpen]);\n\n    return (\n        <PopupWithForm\n            name=\"popup-update-avatar\"\n            title=\"Обновить аватар\"\n            value={valueInput}\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}\n            formValid={formValid}\n        >\n            <input\n                name=\"link\"\n                type=\"url\"\n                placeholder=\"Ссылка на картинку\"\n                className={`popup__input popup__input_link ${descriptionError ? \"popup__input_state_invalid\" : \"\"}`}\n                required\n                autoComplete=\"off\"\n                ref={avatarRef}\n                onChange={(event) => {\n                    handleChangeLinks(event);\n                }}\n            />\n            <span className=\"error\" id=\"link-error\">{descriptionError}</span>\n        </PopupWithForm>\n    );\n}\n\nexport default EditAvatarPopup;\n","function ImagePopup({ card, onClose }) {\n\n    return (\n        <section\n            className={`popup section__popup popup_type_popup-gallery ${\n                card ? \"popup_opened\" : \"\"\n            }`}\n        >\n            <div className=\"popup__gallery\">\n                <img\n                    src={card.link}\n                    alt={card.name}\n                    className=\"popup__image\"\n                />\n                <p className=\"popup__title\">{card.name}</p>\n                <button\n                    name=\"close-button\"\n                    type=\"button\"\n                    className=\"popup__close-button buttons\"\n                    onClick={onClose}\n                ></button>\n            </div>\n        </section>\n    );\n}\n\nexport default ImagePopup;\n","class Api {\n  constructor({ baseUrl, headers }) {\n    this._url = baseUrl;\n    this._headers = headers;\n  }\n  // Получить начальные карточки\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then((res) => this._addResult(res));\n  }\n  // Добавить новую карточку\n  addNewCard(name, link, jwt) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${jwt}`,\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then((res) => this._addResult(res));\n  }\n\n  // Обновляем статус лайков карточки\n  changeLikeCardStatus(cardId, noIsLiked, jwt) {\n    if (noIsLiked) {\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `${jwt}`,\n        },\n      }).then((res) => this._addResult(res));\n    } else {\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `${jwt}`,\n        },\n      }).then((res) => this._addResult(res));\n    }\n  }\n\n  // Удаление карточки\n  deleteCard(cardId, jwt) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${jwt}`,\n      },\n    }).then((res) => this._addResult(res));\n  }\n  // Получить данные пользователя\n  getUserInfo(jwt) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${jwt}`,\n      },\n    })\n    .then((res) => this._addResult(res))\n  }\n  // Редактирование данных пользователя\n  setUserInfo(name, about, jwt) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${jwt}`,\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then((res) => this._addResult(res));\n  }\n  // Редактирование аватара пользователя\n  setUserAvatar(url, jwt) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${jwt}`,\n      },\n      body: JSON.stringify({\n        avatar: url,\n      }),\n    }).then((res) => this._addResult(res));\n  }\n  _addResult(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n\n// Получение данных с сервера\nconst api = new Api({\n  baseUrl: 'https://api.proofblame.nomoredomains.icu',\n  // baseUrl: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': `${localStorage.getItem('jwt')}`,\n  },\n});\n\nexport default api;\n","import PopupWithForm from \"./PopupWithForm\";\n\nfunction ConfirmPopup({ isOpen, onClose, onCardDelete, card, valueInput, formValid}) {\n    function handleSubmit(event) {\n        event.preventDefault();\n        onCardDelete(card);\n\n    }\n\n    return (\n        <PopupWithForm\n            name=\"popup-confirm\"\n            title=\"Вы уверены?\"\n            value={valueInput}\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}\n            formValid={formValid}\n        ></PopupWithForm>\n    );\n}\n\nexport default ConfirmPopup;\n","import { useState, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup({\n    isOpen,\n    onClose,\n    onAddPlace,\n    valueInput,\n    nameError,\n    descriptionError,\n    handleChangeName,\n    handleChangeLinks,\n    formValid\n}) {\n    const [name, setName] = useState();\n    const [link, setLink] = useState();\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        onAddPlace({\n            name,\n            link,\n        });\n    }\n\n    useEffect(() => {\n        setName(\"\");\n        setLink(\"\");\n    }, [isOpen]);\n\n    return (\n        <PopupWithForm\n            name=\"popup-add-card\"\n            title=\"Новое место\"\n            value={valueInput}\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}\n            formValid={formValid}\n            nameError={nameError}\n            descriptionError={descriptionError}\n        >\n            <input\n                name=\"name\"\n                type=\"text\"\n                value={name || \"\"}\n                placeholder=\"Название\"\n                className={`popup__input popup__input_title ${nameError ? \"popup__input_state_invalid\" : \"\"\n                }`}\n                minLength=\"2\"\n                maxLength=\"30\"\n                required\n                id=\"name-card\"\n                autoComplete=\"off\"\n                onChange={(event) => {\n                    handleChangeName(event);\n                    setName(event.target.value);\n                }}\n            />\n            <span id=\"name-card-error\" className=\"error\">\n                {nameError}\n            </span>\n            <input\n                name=\"link\"\n                type=\"url\"\n                value={link || \"\"}\n                placeholder=\"Ссылка на картинку\"\n                className={`popup__input popup__input_link ${descriptionError ? \"popup__input_state_invalid\" : \"\"\n                }`}\n                required\n                autoComplete=\"off\"\n                onChange={(event) => {\n                    handleChangeLinks(event);\n                    setLink(event.target.value);\n                }}\n            />\n            <span className=\"error\" id=\"link-error\">\n                {descriptionError}\n            </span>\n        </PopupWithForm>\n    );\n}\n\nexport default AddPlacePopup;\n","import React from \"react\";\n\nfunction Popup(props) {\n    const [isOpen, onClose] = [props.isOpen, props.onClose];\n    React.useEffect(() => {\n        if (!isOpen) return;\n        const handleEscapeClose = (event) => {\n            if (event.key === \"Escape\") {\n                onClose();\n            }\n        };\n        document.addEventListener(\"keydown\", handleEscapeClose);\n        return () => {\n            document.removeEventListener(\"keydown\", handleEscapeClose);\n        };\n    }, [isOpen, onClose]);\n\n    return (\n        <section\n            className={`popup section__popup popup_${props.name} ${\n                isOpen && \"popup_opened\"\n            }`}\n            onMouseDown={(e) =>\n                e.target.classList.contains(\"popup\") && onClose()\n            }\n        >\n            <div className=\"popup__container\">\n                {props.children}\n                <button\n                    name=\"close-button\"\n                    type=\"button\"\n                    className=\"popup__close-button buttons\"\n                    onClick={onClose}\n                ></button>\n            </div>\n        </section>\n    );\n}\n\nexport default Popup;\n","export default __webpack_public_path__ + \"static/media/register-ok.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/register-fail.df8eddf6.svg\";","import Popup from \"./Popup\";\nimport imageOk from \"../images/register-ok.svg\";\nimport imageFail from \"../images/register-fail.svg\";\n\nfunction InfoTooltip(props) {\n    return (\n        <Popup isOpen={props.isOpen} onClose={props.onClose} name={props.name}>\n            <img\n                src={props.status ? imageOk : imageFail}\n                alt=\"\"\n                className=\"popup__info-image\"\n            />\n            <p className=\"popup__info-message\">{props.children}</p>\n        </Popup>\n    );\n}\n\nexport default InfoTooltip;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport InfoTooltip from \"./InfoTooltip\";\n\nconst Register = (props) => {\n    const [ data, setData ] = useState({\n        email: '',\n        password: '',\n    })\n\n    const [popupMessage, setPopupMessage] = useState(\"\");\n    const [isRegisterPopup, setIsRegisterPopup] = useState(false);\n    const [submitStatus, setSubmitStatus] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (props.loggedIn) history.push(\"/\");\n    }, [props.loggedIn, history]);\n\n    function onChange(e) {\n        const { name, value } = e.target\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n\n    function onClose() {\n        setIsRegisterPopup(false);\n        if (submitStatus) {\n            history.push(\"/sign-in\");\n        }\n    }\n\n    function onSubmit(e) {\n        e.preventDefault();\n        props\n            .onRegister(data.email, data.password)\n            .then(() => {\n                setSubmitStatus(true);\n                setPopupMessage(\"Вы успешно зарегистрировались!\");\n            })\n            .catch(() => {\n                setPopupMessage(\"Что-то пошло не так! Попробуйте ещё раз.\");\n            })\n            .finally(() => {\n                setIsRegisterPopup(true);\n            });\n    }\n\n    return (\n        <div className=\"register\">\n            <h2 className=\"register__heading\">Регистрация</h2>\n            <form\n                onSubmit={onSubmit}\n                className=\"register__form\"\n                autoComplete=\"off\"\n            >\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    value={data.email}\n                    onChange={onChange}\n                    className=\"register__input\"\n                    placeholder=\"Email\"\n                    autoComplete=\"email\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    value={data.password}\n                    onChange={onChange}\n                    className=\"register__input\"\n                    placeholder=\"Пароль\"\n                    autoComplete=\"new-password\"\n                />\n                <button type=\"submit\" className=\"register__submit-button\">\n                    Зарегистрироваться\n                </button>\n            </form>\n            <p className=\"register__title\">\n                Уже регистрировались?\n                <Link className=\"register__link\" to=\"/sign-in\">\n                    Войти\n                </Link>\n            </p>\n            <InfoTooltip\n                isOpen={isRegisterPopup}\n                onClose={onClose}\n                name=\"register\"\n                status={submitStatus}\n            >\n                {popupMessage}\n            </InfoTooltip>\n        </div>\n    );\n};\n\nexport default Register;\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport InfoTooltip from \"./InfoTooltip\";\n\nfunction Login(props) {\n    const [data, setData] = useState({\n        currentEmail: \"\",\n        currentPassword: \"\"\n    });\n    const [popupMessage, setPopupMessage] = useState(\"\");\n    const [isLoginPopup, setIsLoginPopup] = useState(false);\n    const [submitStatus, setSubmitStatus] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (props.loggedIn) history.push(\"/\");\n    }, [props.loggedIn, history]);\n\n    function onChange(e) {\n        const { name, value } = e.target;\n        setData({\n            ...data,\n            [name]: value\n        });\n    }\n\n    function onClose() {\n        setIsLoginPopup(false);\n        if (submitStatus) {\n            props.checkToken();\n        }\n    }\n\n    function onSubmit(e) {\n        e.preventDefault();\n        props\n            .onLogin(data.currentEmail, data.currentPassword)\n            .then(() => {\n                setSubmitStatus(true);\n                setPopupMessage(\"Вы успешно вошли!\");\n            })\n            .catch(() => {\n                setPopupMessage(\"Что-то пошло не так! Попробуйте ещё раз.\");\n            })\n            .finally(() => {\n                setIsLoginPopup(true);\n            });\n    }\n\n    return (\n        <div className=\"register\">\n            <h2 className=\"register__heading\">Вход</h2>\n            <form className=\"register__form\" onSubmit={onSubmit}>\n                <input\n                    type=\"email\"\n                    name=\"currentEmail\"\n                    className=\"register__input\"\n                    placeholder=\"Email\"\n                    value={data.currentEmail}\n                    onChange={onChange}\n                    autoComplete=\"email\"\n                />\n                <input\n                    type=\"password\"\n                    name=\"currentPassword\"\n                    className=\"register__input\"\n                    placeholder=\"Пароль\"\n                    value={data.currentPassword}\n                    onChange={onChange}\n                    autoComplete=\"current-password\"\n                />\n                <button className=\"register__submit-button\">Войти</button>\n            </form>\n            <InfoTooltip\n                isOpen={isLoginPopup}\n                onClose={onClose}\n                name=\"login\"\n                status={submitStatus}\n            >\n                {popupMessage}\n            </InfoTooltip>\n        </div>\n    );\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n    return (\n        <Route>\n            {() =>\n                props.loggedIn ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"./sign-in\" />\n                )\n            }\n        </Route>\n    );\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nconst MainRoute = (props) => {\n    return (\n        <Route>\n            {() => (props.isChecked ? props.children : <p>Загрузка...</p>)}\n        </Route>\n    );\n};\n\nexport default MainRoute;\n","class Auth {\n    constructor(baseURL) {\n        this.baseURL = baseURL;\n    }\n\n    _getResponseData(res) {\n        if (res.ok) return res.json();\n        return res\n            .json()\n            .then((res) => Promise.reject(new Error(res.message || res.error)));\n    }\n\n    register(email, password) {\n        return fetch(`${this.baseURL}/signup`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                password,\n                email\n            })\n        }).then(this._getResponseData);\n    }\n\n    login(email, password) {\n        return fetch(`${this.baseURL}/signin`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                password,\n                email\n            })\n        }).then(this._getResponseData);\n    }\n\n    getUserData(jwt) {\n        return fetch(`${this.baseURL}/users/me`, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `${jwt}`\n            }\n        }).then(this._getResponseData);\n    }\n}\n\nconst auth = new Auth(\"https://api.proofblame.nomoredomains.icu\");\n// const auth = new Auth(\"http://localhost:3000\");\n\nexport default auth;\n","import React, {useState, useEffect} from 'react';\nimport {Route, Switch, useHistory} from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport ConfirmPopup from './ConfirmPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport MainRoute from './MainRoute';\nimport auth from '../utils/auth';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(false);\n  const [deleteCard, setDeleteCard] = useState(false);\n  const [currentUser, setCurrentUser] = useState({_id: null, avatar: ''});\n  const [cards, setCards] = useState([]);\n  const [valueInput, setValueInput] = useState({\n    submit: 'Сохранить',\n    confirm: 'Да',\n  });\n\n  const [nameError, setNameError] = useState('');\n  const [descriptionError, setDescriptionError] = useState('');\n  const [formValid, setFormValid] = useState(false);\n  const [nameValid, setNameValid] = useState(false);\n  const [descriptionValid, setDescriptionValid] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isChecked, setIsChecked] = useState(false);\n  const history = useHistory();\n\n  // Получение данных о пользователе и карточках после логина\n  useEffect(() => {\n    checkToken();\n  }, []);\n\n  function checkToken() {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      api\n        .getUserInfo(jwt)\n        .then(user => {\n          setLoggedIn(true);\n          history.push('/');\n          setCurrentUser(user.data);\n        })\n        .catch(e => console.error(e.message));\n      api\n        .getInitialCards()\n        .then(cards => {\n          setCards(cards);\n        })\n        .catch(err => {\n          console.log(err);\n        })\n        .finally(() => {\n          setIsChecked(true);\n        });\n    } else {\n      setIsChecked(true);\n    }\n  }\n\n  // Валидация изменения имени и названия\n  function handleChangeName(event) {\n    if (event.target.validity.valid) {\n      setNameError('');\n      setNameValid(true);\n    } else {\n      setNameError(event.target.validationMessage);\n      setNameValid(false);\n    }\n  }\n\n  // Валидация изменения описания профиля\n  function handleChangeDescription(event) {\n    if (event.target.validity.valid) {\n      setDescriptionError('');\n      setDescriptionValid(true);\n    } else {\n      setDescriptionError(event.target.validationMessage);\n      setDescriptionValid(false);\n    }\n  }\n\n  // Валидация изменения ссылок\n  function handleChangeLinks(event) {\n    const checkexp = /(http)?s?:?(\\/\\/[^\"']*\\.(?:png|jpg|jpeg|gif|png|svg))/gi.test(\n      event.target.value\n    );\n    if (event.target.validity.valid && checkexp) {\n      setDescriptionError('');\n      setDescriptionValid(true);\n    } else {\n      setDescriptionError(event.target.validationMessage || 'Некорректная ссылка');\n      setDescriptionValid(false);\n    }\n  }\n  // Изначальная валидация формы\n  useEffect(() => {\n    if (!nameValid || !descriptionValid) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n    return () => {\n      setFormValid(false);\n    };\n  }, [nameValid, descriptionValid]);\n\n  //  Закрытие попапа по Esc и клику на оверлей\n  useEffect(() => {\n    function handleEscClose(event) {\n      if (event.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n\n    function handleClickOnOverlay(event) {\n      const popup = document.querySelector('.popup_opened');\n      if (event.target !== popup) {\n        return;\n      }\n      closeAllPopups();\n    }\n\n    document.addEventListener('click', handleClickOnOverlay);\n    document.addEventListener('keydown', handleEscClose);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n      document.removeEventListener('click', handleClickOnOverlay);\n    };\n  }, []);\n\n  //  Поставить/снять лайк\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i === currentUser._id);\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      api\n        .changeLikeCardStatus(card._id, !isLiked, jwt)\n        .then(newCard => {\n          const newCards = cards.map(c => (c._id === card._id ? newCard : c));\n          setCards(newCards);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n\n  //  Удалить карточку\n  function handleCardDelete(card) {\n    setValueInput({\n      ...valueInput,\n      confirm: 'Удаление...',\n    });\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      api\n        .deleteCard(card._id, jwt)\n        .then(() => {\n          const newCards = cards.filter(c => c._id !== card._id);\n          setCards(newCards);\n        })\n        .then(() => {\n          closeAllPopups();\n          setValueInput({\n            ...valueInput,\n            confirm: 'Да',\n          });\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n\n  //  Добавить карточку\n  function handleAddPlaceSubmit({name, link}) {\n    setValueInput({\n      ...valueInput,\n      submit: 'Сохранение...',\n    });\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      api\n        .addNewCard(name, link, jwt)\n        .then(card => {\n          setCards([card.data, ...cards]);\n        })\n        .then(() => {\n          setValueInput({\n            ...valueInput,\n            submit: 'Сохранить',\n          });\n          closeAllPopups();\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n  //  Обновить аватар\n  function handleUpdateAvatar({avatar}) {\n    setValueInput({\n      ...valueInput,\n      submit: 'Сохранение...',\n    });\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      api\n        .setUserAvatar(avatar, jwt)\n        .then(() => {\n          setCurrentUser({\n            ...currentUser,\n            avatar: avatar,\n          });\n        })\n        .then(() => {\n          closeAllPopups();\n          setValueInput({\n            ...valueInput,\n            submit: 'Сохранить',\n          });\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n  //  Обновить данные пользователя\n  function handleUpdateUser({name, about}) {\n    setValueInput({\n      ...valueInput,\n      submit: 'Сохранение...',\n    });\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      api\n        .setUserInfo(name, about, jwt)\n        .then(() => {\n          setCurrentUser({\n            ...currentUser,\n            name: name,\n            about: about,\n          });\n        })\n        .then(() => {\n          closeAllPopups();\n          setValueInput({\n            ...valueInput,\n            submit: 'Сохранить',\n          });\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n\n  //  Присвоить значения карточке\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  //  Открыть попап редактирования профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n    setNameValid(true);\n    setDescriptionValid(true);\n  }\n  //  Открыть попап добавдения новой карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    setNameValid(false);\n    setDescriptionValid(false);\n  }\n  //  Открыть попап редактирования аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n    setNameValid(false);\n  }\n  //  Открыть попап подтверждения удаления карточки\n  function handleDeleteButtonClick(card) {\n    setIsConfirmPopupOpen(true);\n    setDeleteCard(card);\n    setNameValid(true);\n    setDescriptionValid(true);\n  }\n  //  Закрыть все попапы\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n    setIsConfirmPopupOpen(false);\n    setDescriptionError('');\n    setNameError('');\n  }\n\n  function handleRegister(email, password) {\n    return auth.register(email, password);\n  }\n\n  function handleLogin(email, password) {\n    return auth.login(email, password).then(res => {\n      localStorage.setItem('jwt', res.token);\n    });\n  }\n\n  function handleSignout() {\n    setLoggedIn(false);\n    setCurrentUser({_id: null, avatar: ''});\n    localStorage.removeItem('jwt');\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        <Header loggedIn={loggedIn} email={currentUser.email} onSignOut={handleSignout} />\n        <MainRoute isChecked={isChecked}>\n          <Switch>\n            <ProtectedRoute\n              loggedIn={loggedIn}\n              exact\n              path=\"/\"\n              component={Main}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onConfirmDelete={handleDeleteButtonClick}\n              handleChangeName={handleChangeName}\n            />\n\n            <Route path=\"/sign-up\">\n              <Register onRegister={handleRegister} loggedIn={loggedIn} />\n            </Route>\n            <Route path=\"/sign-in\">\n              <Login onLogin={handleLogin} loggedIn={loggedIn} checkToken={checkToken} />\n            </Route>\n          </Switch>\n        </MainRoute>\n        <Footer />\n        <ConfirmPopup\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onCardDelete={handleCardDelete}\n          card={deleteCard}\n          valueInput={valueInput.confirm}\n          formValid={formValid}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          valueInput={valueInput.submit}\n          nameError={nameError}\n          descriptionError={descriptionError}\n          handleChangeName={handleChangeName}\n          handleChangeLinks={handleChangeLinks}\n          formValid={formValid}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          valueInput={valueInput.submit}\n          descriptionError={descriptionError}\n          handleChangeLinks={handleChangeLinks}\n          formValid={formValid}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          valueInput={valueInput.submit}\n          nameError={nameError}\n          descriptionError={descriptionError}\n          handleChangeName={handleChangeName}\n          handleChangeDescription={handleChangeDescription}\n          formValid={formValid}\n        />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}