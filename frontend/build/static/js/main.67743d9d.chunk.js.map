{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","images/edit-avatar.svg","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/ImagePopup.js","utils/api.js","components/ConfirmPopup.js","components/AddPlacePopup.js","components/Popup.js","images/register-ok.svg","images/register-fail.svg","components/InfoTooltip.js","components/Register.js","components/Login.js","components/ProtectedRoute.js","components/MainRoute.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","logo","alt","exact","path","to","loggedIn","email","onClick","onSignout","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onConfirmDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","type","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","handleChangeName","cardList","map","avatar","photoEdit","about","Footer","PopupWithForm","title","value","isOpen","onClose","handleSubmit","children","formValid","noValidate","onSubmit","disabled","EditProfilePopup","onUpdateUser","valueInput","nameError","descriptionError","handleChangeDescription","useState","setName","description","setDescription","useEffect","event","preventDefault","onChange","target","id","minLength","maxLength","required","autoComplete","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","placeholder","ref","ImagePopup","api","baseUrl","headers","this","_url","_headers","fetch","method","then","res","_addResult","body","JSON","stringify","cardId","noIsLiked","url","ok","json","Promise","reject","status","authorization","ConfirmPopup","onCardDelete","AddPlacePopup","setLink","Popup","handleEscapeClose","key","document","addEventListener","removeEventListener","onMouseDown","e","classList","contains","InfoToolTip","imageOk","imageFail","Register","password","data","setData","popupMessage","setPopupMessage","isRegisterPopup","setIsRegisterPopup","submitStatus","setSubmitStatus","history","useHistory","push","onRegister","catch","finally","Login","isLoginPopup","setIsLoginPopup","onLogin","checkToken","ProtectedRoute","Component","component","MainRoute","isChecked","auth","baseURL","Error","message","error","_getResponseData","jwt","Authorization","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","deleteCard","setDeleteCard","setCurrentUser","setCards","submit","confirm","setValueInput","setNameError","setDescriptionError","setFormValid","nameValid","setNameValid","descriptionValid","setDescriptionValid","setLoggedIn","user","setUser","setIsChecked","localStorage","getItem","getUserData","console","validity","valid","validationMessage","closeAllPopups","getUserInfo","err","log","getInitialCards","handleEscClose","handleClickOnOverlay","popup","querySelector","Provider","clear","login","setItem","token","register","changeLikeCardStatus","newCard","newCards","c","filter","addNewCard","setUserAvatar","setUserInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qOAAe,MAA0B,iCC4C1BA,MAzCf,SAAgBC,GAEZ,OACI,yBAAQC,UAAU,iBAAlB,UACI,qBACIA,UAAU,eACVC,IAAKC,EACLC,IAAI,4DAER,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,IAAD,CAAML,UAAU,eAAeM,GAAG,WAAlC,kFAIJ,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,IAAD,CAAML,UAAU,eAAeM,GAAG,WAAlC,8CAIJ,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACI,sBAAKL,UAAU,sBAAf,UACKD,EAAMQ,UACH,mBAAGP,UAAU,gBAAb,SAA8BD,EAAMS,QAEvCT,EAAMS,OACH,cAAC,IAAD,CACIR,UAAU,mBACVM,GAAG,WACHG,QAASV,EAAMW,UAHnB,wDC3BfC,EAAqBC,IAAMC,gBC2DzBC,MA1Df,YAAmE,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,gBACrCC,EAAcP,IAAMQ,WAAWT,GAC/BU,EAAQN,EAAKO,MAAMC,MAAQJ,EAAYI,IACvCC,EAAyB,UACxBH,EAAQ,iCAAmC,iCAG5CI,EAAUV,EAAKW,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQJ,EAAYI,OACrDM,EAAuB,uCACOJ,EAAU,8BAAgC,IAe9E,OACI,oBAAIzB,UAAU,iBAAd,SACI,yBAAQA,UAAU,UAAlB,UACI,qBACIC,IAAKc,EAAKe,KACV3B,IAAKY,EAAKgB,KACV/B,UAAU,iBACVS,QAnBhB,WACIO,EAAYD,MAoBJ,sBAAKf,UAAU,gBAAf,UACI,mBAAGA,UAAU,wCAAb,SACKe,EAAKgB,OAEV,sBAAK/B,UAAU,sBAAf,UACI,wBACIA,UAAW6B,EACXG,KAAK,SACLvB,QAzBxB,WACIQ,EAAWF,MA0BK,qBAAKf,UAAU,sBAAf,SACKe,EAAKW,MAAMO,eAIxB,wBACIjC,UAAWwB,EACXQ,KAAK,SACLvB,QA/BhB,WACIS,EAAgBH,YCxBT,MAA0B,wCCyE1BmB,MApEf,YASI,IARAC,EAQD,EARCA,cACAC,EAOD,EAPCA,WACAC,EAMD,EANCA,aACArB,EAKD,EALCA,YACAsB,EAID,EAJCA,MACArB,EAGD,EAHCA,WACAC,EAED,EAFCA,gBAGMC,GADP,EADCoB,iBAEoB3B,IAAMQ,WAAWT,IAG/B6B,EAAWF,EAAMG,KAAI,SAAC1B,GAAD,OACvB,cAAC,EAAD,CAEIA,KAAMA,EACNC,YAAaA,EACbC,WAAYA,EACZC,gBAAiBA,GAJZH,EAAKQ,QAQlB,OACI,uBAAMvB,UAAU,mCAAhB,UACI,0BAASA,UAAU,2BAAnB,UACI,sBAAKA,UAAU,gBAAf,UACI,qBACIC,IAAKkB,EAAYuB,OACjBvC,IAAKgB,EAAYY,KACjB/B,UAAU,oBAGd,qBACIC,IAAK0C,EACLxC,IAAI,4EACJH,UAAU,uBACVS,QAAS4B,OAIjB,sBAAKrC,UAAU,gBAAf,UACI,oBAAIA,UAAU,iCAAd,SACKmB,EAAYY,OAEjB,wBACIC,KAAK,SACLhC,UAAU,+BACVS,QAAS0B,IAEb,mBAAGnC,UAAU,2CAAb,SACKmB,EAAYyB,WAGrB,wBACIZ,KAAK,SACLhC,UAAU,8BACVS,QAAS2B,OAIjB,yBAASpC,UAAU,WAAnB,SACI,oBAAIA,UAAU,iBAAd,SAAgCwC,UC3DjCK,MARf,WACI,OACI,wBAAQ7C,UAAU,iCAAlB,SACI,mBAAGA,UAAU,gBAAb,uCC6CG8C,MAhDf,YASI,IARAf,EAQD,EARCA,KACAgB,EAOD,EAPCA,MACAC,EAMD,EANCA,MACAC,EAKD,EALCA,OACAC,EAID,EAJCA,QACAC,EAGD,EAHCA,aACAC,EAED,EAFCA,SACAC,EACD,EADCA,UAEA,OACI,yBACIrD,UAAS,0CAAqC+B,EAArC,YACLkB,EAAS,eAAiB,IAFlC,SAKI,qBAAKjD,UAAU,mBAAf,SACI,uBACI+B,KAAMA,EACN/B,UAAS,uCAAkC+B,GAC3CuB,YAAU,EACVC,SAAUJ,EAJd,UAMI,oBAAInD,UAAU,mCAAd,SACK+C,IAEL,0BAAU/C,UAAU,gBAApB,SAAqCoD,IACrC,uBACIrB,KAAK,cACLC,KAAK,SACLgB,MAAOA,EACPhD,UAAS,6BACJqD,EAA2C,GAA/B,8BAEjBG,UAAWH,IAEf,wBACItB,KAAK,eACLC,KAAK,SACLhC,UAAU,8BACVS,QAASyC,YC8ClBO,MAlFf,YAUI,IATAR,EASD,EATCA,OACAC,EAQD,EARCA,QACAQ,EAOD,EAPCA,aACAC,EAMD,EANCA,WACAC,EAKD,EALCA,UACAC,EAID,EAJCA,iBACAtB,EAGD,EAHCA,iBACAuB,EAED,EAFCA,wBACAT,EACD,EADCA,UACD,EACyBU,mBAAS,IADlC,mBACQhC,EADR,KACciC,EADd,OAEuCD,mBAAS,IAFhD,mBAEQE,EAFR,KAEqBC,EAFrB,KAGO/C,EAAcC,qBAAWT,GAc/B,OAZAwD,qBAAU,WACNH,EAAQ7C,EAAYY,MACpBmC,EAAe/C,EAAYyB,SAC5B,CAACK,EAAQ9B,IAUR,eAAC,EAAD,CACIY,KAAK,qBACLgB,MAAM,4HACNC,MAAOW,EACPV,OAAQA,EACRC,QAASA,EACTC,aAdR,SAAsBiB,GAClBA,EAAMC,iBACFX,EAAa,CACT3B,OACAa,MAAOqB,KAWXZ,UAAWA,EAPf,UASI,uBACItB,KAAK,OACLC,KAAK,OACLgB,MAAOjB,GAAQ,GACfuC,SAAU,SAACF,GACP7B,EAAiB6B,GACjBJ,EAAQI,EAAMG,OAAOvB,QAEzBhD,UAAS,yCACL4D,EAAY,6BAA+B,IAE/CY,GAAG,YACHC,UAAU,IACVC,UAAU,KACVC,UAAQ,EACRC,aAAa,QAEjB,sBAAMJ,GAAG,kBAAkBxE,UAAU,QAArC,SACK4D,IAGL,uBACI7B,KAAK,MACLC,KAAK,OACLgB,MAAOiB,GAAe,GACtBK,SAAU,SAACF,GACPN,EAAwBM,GACxBF,EAAeE,EAAMG,OAAOvB,QAEhChD,UAAS,wCACL6D,EAAmB,6BAA+B,IAEtDW,GAAG,QACHC,UAAU,IACVC,UAAU,MACVC,UAAQ,EACRC,aAAa,QAEjB,sBAAMJ,GAAG,cAAcxE,UAAU,QAAjC,SACK6D,QC5BFgB,MAjDf,YAQI,IAPA5B,EAOD,EAPCA,OACAC,EAMD,EANCA,QACA4B,EAKD,EALCA,eACAnB,EAID,EAJCA,WACAE,EAGD,EAHCA,iBACAC,EAED,EAFCA,wBACAT,EACD,EADCA,UAEM0B,EAAYC,mBAYlB,OAJAb,qBAAU,WACNY,EAAUE,QAAQjC,MAAQ,KAC3B,CAACC,IAGA,eAAC,EAAD,CACIlB,KAAK,sBACLgB,MAAM,wFACNC,MAAOW,EACPV,OAAQA,EACRC,QAASA,EACTC,aAjBR,SAAsBiB,GAClBA,EAAMC,iBACNS,EAAe,CACXpC,OAAQqC,EAAUE,QAAQjC,SAe1BK,UAAWA,EAPf,UASI,uBACItB,KAAK,OACLC,KAAK,MACLkD,YAAY,qGACZlF,UAAS,yCAAoC6D,EAAmB,6BAA+B,IAC/Fc,UAAQ,EACRH,GAAG,OACHI,aAAa,MACbO,IAAKJ,EACLT,SAAU,SAACF,GACPN,EAAwBM,MAGhC,sBAAMpE,UAAU,QAAQwE,GAAG,aAA3B,SAAyCX,QCrBtCuB,MA1Bf,YAAwC,IAAlBrE,EAAiB,EAAjBA,KAAMmC,EAAW,EAAXA,QAExB,OACI,yBACIlD,UAAS,wDACLe,EAAO,eAAiB,IAFhC,SAKI,sBAAKf,UAAU,iBAAf,UACI,qBACIC,IAAKc,EAAKe,KACV3B,IAAKY,EAAKgB,KACV/B,UAAU,iBAEd,mBAAGA,UAAU,eAAb,SAA6Be,EAAKgB,OAClC,wBACIA,KAAK,eACLC,KAAK,SACLhC,UAAU,8BACVS,QAASyC,U,gBCwEdmC,EARH,I,WAlFR,cAAmC,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAAW,oBAC9BC,KAAKC,KAAOH,EACZE,KAAKE,SAAWH,E,8DAGD,IAAD,OACd,OAAOI,MAAM,GAAD,OAAIH,KAAKC,KAAT,UAAuB,CAC/BG,OAAQ,MACRL,QAASC,KAAKE,WACfG,MAAK,SAACC,GAAD,OAAS,EAAKC,WAAWD,Q,iCAG1B/D,EAAMD,GAAO,IAAD,OACnB,OAAO6D,MAAM,GAAD,OAAIH,KAAKC,KAAT,UAAuB,CAC/BG,OAAQ,OACRL,QAASC,KAAKE,SACdM,KAAMC,KAAKC,UAAU,CACjBnE,KAAMA,EACND,KAAMA,MAEX+D,MAAK,SAACC,GAAD,OAAS,EAAKC,WAAWD,Q,2CAIhBK,EAAQC,GAAY,IAAD,OACpC,OAAIA,EACOT,MAAM,GAAD,OAAIH,KAAKC,KAAT,wBAA6BU,GAAU,CAC/CP,OAAQ,MACRL,QAASC,KAAKE,WACfG,MAAK,SAACC,GAAD,OAAS,EAAKC,WAAWD,MAE1BH,MAAM,GAAD,OAAIH,KAAKC,KAAT,wBAA6BU,GAAU,CAC/CP,OAAQ,SACRL,QAASC,KAAKE,WACfG,MAAK,SAACC,GAAD,OAAS,EAAKC,WAAWD,Q,iCAK9BK,GAAS,IAAD,OACf,OAAOR,MAAM,GAAD,OAAIH,KAAKC,KAAT,kBAAuBU,GAAU,CACzCP,OAAQ,SACRL,QAASC,KAAKE,WACfG,MAAK,SAACC,GAAD,OAAS,EAAKC,WAAWD,Q,oCAGtB,IAAD,OACV,OAAOH,MAAM,GAAD,OAAIH,KAAKC,KAAT,aAA0B,CAClCG,OAAQ,MACRL,QAASC,KAAKE,WACfG,MAAK,SAACC,GAAD,OAAS,EAAKC,WAAWD,Q,kCAGzB/D,EAAMa,GAAQ,IAAD,OACrB,OAAO+C,MAAM,GAAD,OAAIH,KAAKC,KAAT,aAA0B,CAClCG,OAAQ,QACRL,QAASC,KAAKE,SACdM,KAAMC,KAAKC,UAAU,CACjBnE,KAAMA,EACNa,MAAOA,MAEZiD,MAAK,SAACC,GAAD,OAAS,EAAKC,WAAWD,Q,oCAGvBO,GAAM,IAAD,OACf,OAAOV,MAAM,GAAD,OAAIH,KAAKC,KAAT,oBAAiC,CACzCG,OAAQ,QACRL,QAASC,KAAKE,SACdM,KAAMC,KAAKC,UAAU,CACjBxD,OAAQ2D,MAEbR,MAAK,SAACC,GAAD,OAAS,EAAKC,WAAWD,Q,iCAE1BA,GACP,OAAIA,EAAIQ,GACGR,EAAIS,OAERC,QAAQC,OAAR,gDAA0BX,EAAIY,a,KAKjC,CAAQ,CAChBpB,QAAS,8CACTC,QAAS,CACLoB,cAAe,uCACf,eAAgB,sBCjETC,MApBf,YAAsF,IAA9D3D,EAA6D,EAA7DA,OAAQC,EAAqD,EAArDA,QAAS2D,EAA4C,EAA5CA,aAAc9F,EAA8B,EAA9BA,KAAM4C,EAAwB,EAAxBA,WAAYN,EAAY,EAAZA,UAOrE,OACI,cAAC,EAAD,CACItB,KAAK,gBACLgB,MAAM,2DACNC,MAAOW,EACPV,OAAQA,EACRC,QAASA,EACTC,aAbR,SAAsBiB,GAClBA,EAAMC,iBACNwC,EAAa9F,IAYTsC,UAAWA,KCmERyD,MAjFf,YAUI,IATA7D,EASD,EATCA,OACAC,EAQD,EARCA,QACAd,EAOD,EAPCA,WACAuB,EAMD,EANCA,WACAC,EAKD,EALCA,UACAC,EAID,EAJCA,iBACAtB,EAGD,EAHCA,iBACAuB,EAED,EAFCA,wBACAT,EACD,EADCA,UACD,EACyBU,qBADzB,mBACQhC,EADR,KACciC,EADd,OAEyBD,qBAFzB,mBAEQjC,EAFR,KAEciF,EAFd,KAiBC,OALA5C,qBAAU,WACNH,EAAQ,IACR+C,EAAQ,MACT,CAAC9D,IAGA,eAAC,EAAD,CACIlB,KAAK,iBACLgB,MAAM,gEACNC,MAAOW,EACPV,OAAQA,EACRC,QAASA,EACTC,aApBR,SAAsBiB,GAClBA,EAAMC,iBACNjC,EAAW,CACPL,OACAD,UAiBAuB,UAAWA,EACXO,UAAWA,EACXC,iBAAkBA,EATtB,UAWI,uBACI9B,KAAK,OACLC,KAAK,OACLgB,MAAOjB,GAAQ,GACfmD,YAAY,mDACZlF,UAAS,0CAAqC4D,EAAY,6BAA+B,IAEzFa,UAAU,IACVC,UAAU,KACVC,UAAQ,EACRH,GAAG,YACHI,aAAa,MACbN,SAAU,SAACF,GACP7B,EAAiB6B,GACjBJ,EAAQI,EAAMG,OAAOvB,UAG7B,sBAAMwB,GAAG,kBAAkBxE,UAAU,QAArC,SACK4D,IAEL,uBACI7B,KAAK,OACLC,KAAK,MACLgB,MAAOlB,GAAQ,GACfoD,YAAY,qGACZlF,UAAS,yCAAoC6D,EAAmB,6BAA+B,IAE/Fc,UAAQ,EACRH,GAAG,OACHI,aAAa,MACbN,SAAU,SAACF,GACPN,EAAwBM,GACxB2C,EAAQ3C,EAAMG,OAAOvB,UAG7B,sBAAMhD,UAAU,QAAQwE,GAAG,aAA3B,SACKX,Q,QCvCFmD,MArCf,SAAejH,GAAQ,IAAD,EACQ,CAACA,EAAMkD,OAAQlD,EAAMmD,SAAxCD,EADW,KACHC,EADG,KAelB,OAbAtC,IAAMuD,WAAU,WACZ,GAAKlB,EAAL,CACA,IAAMgE,EAAoB,SAAC7C,GACL,WAAdA,EAAM8C,KACNhE,KAIR,OADAiE,SAASC,iBAAiB,UAAWH,GAC9B,WACHE,SAASE,oBAAoB,UAAWJ,OAE7C,CAAChE,EAAQC,IAGR,yBACIlD,UAAS,qCAAgCD,EAAMgC,KAAtC,YACLkB,GAAU,gBAEdqE,YAAa,SAACC,GAAD,OACTA,EAAEhD,OAAOiD,UAAUC,SAAS,UAAYvE,KALhD,SAQI,sBAAKlD,UAAU,mBAAf,UACKD,EAAMqD,SACP,wBACIrB,KAAK,eACLC,KAAK,SACLhC,UAAU,8BACVS,QAASyC,UChCd,MAA0B,wCCA1B,MAA0B,0CCiB1BwE,MAbf,SAAqB3H,GACjB,OACI,eAAC,EAAD,CAAOkD,OAAQlD,EAAMkD,OAAQC,QAASnD,EAAMmD,QAASnB,KAAMhC,EAAMgC,KAAjE,UACI,qBACI9B,IAAKF,EAAM2G,OAASiB,EAAUC,EAC9BzH,IAAI,GACJH,UAAU,sBAEd,mBAAGA,UAAU,sBAAb,SAAoCD,EAAMqD,eCsFvCyE,EA9FE,SAAC9H,GAAW,IAAD,EACEgE,mBAAS,CAC/BvD,MAAO,GACPsH,SAAU,KAHU,mBAChBC,EADgB,KACVC,EADU,OAMgBjE,mBAAS,IANzB,mBAMjBkE,EANiB,KAMHC,EANG,OAOsBnE,oBAAS,GAP/B,mBAOjBoE,EAPiB,KAOAC,EAPA,OAQgBrE,oBAAS,GARzB,mBAQjBsE,EARiB,KAQHC,EARG,KASlBC,EAAUC,cAMhB,SAASlE,EAASiD,GAAI,IAAD,EACOA,EAAEhD,OAAlBxC,EADS,EACTA,KAAMiB,EADG,EACHA,MACdgF,EAAQ,2BACDD,GADA,kBAEFhG,EAAOiB,KA2BhB,OAnCAmB,qBAAU,WACFpE,EAAMQ,UAAUgI,EAAQE,KAAK,OAClC,CAAC1I,EAAMQ,SAAUgI,IAkChB,sBAAKvI,UAAU,WAAf,UACI,oBAAIA,UAAU,oBAAd,gFACA,uBACIuD,SApBZ,SAAkBgE,GACdA,EAAElD,iBACFtE,EACK2I,WAAWX,EAAKvH,MAAOuH,EAAKD,UAC5BjC,MAAK,WACFyC,GAAgB,GAChBJ,EAAgB,4KAEnBS,OAAM,WACHT,EAAgB,0MAEnBU,SAAQ,WACLR,GAAmB,OASnBpI,UAAU,iBACV4E,aAAa,MAHjB,UAKI,uBACIJ,GAAG,QACHzC,KAAK,QACLC,KAAK,QACLgB,MAAO+E,EAAKvH,MACZ8D,SAAUA,EACVtE,UAAU,kBACVkF,YAAY,UAEhB,uBACIV,GAAG,WACHzC,KAAK,WACLC,KAAK,WACLgB,MAAO+E,EAAKD,SACZxD,SAAUA,EACVtE,UAAU,kBACVkF,YAAY,yCAEhB,wBAAQlD,KAAK,SAAShC,UAAU,0BAAhC,6HAIJ,oBAAGA,UAAU,kBAAb,iIAEI,cAAC,IAAD,CAAMA,UAAU,iBAAiBM,GAAG,WAApC,+CAIJ,cAAC,EAAD,CACI2C,OAAQkF,EACRjF,QA7DZ,WACIkF,GAAmB,GACfC,GACAE,EAAQE,KAAK,aA2DT1G,KAAK,WACL2E,OAAQ2B,EAJZ,SAMKJ,QCDFY,MAvFf,SAAe9I,GAAQ,IAAD,EACMgE,mBAAS,CAC7BvD,MAAO,GACPsH,SAAU,KAHI,mBACXC,EADW,KACLC,EADK,OAOsBjE,mBAAS,IAP/B,mBAOXkE,EAPW,KAOGC,EAPH,OAQsBnE,oBAAS,GAR/B,mBAQX+E,EARW,KAQGC,EARH,OASsBhF,oBAAS,GAT/B,mBASXsE,EATW,KASGC,EATH,KAUZC,EAAUC,cAMhB,SAASlE,EAASiD,GAAI,IAAD,EACOA,EAAEhD,OAAlBxC,EADS,EACTA,KAAMiB,EADG,EACHA,MACdgF,EAAQ,2BACDD,GADA,kBAEFhG,EAAOiB,KAmChB,OA3CAmB,qBAAU,WACFpE,EAAMQ,UAAUgI,EAAQE,KAAK,OAClC,CAAC1I,EAAMQ,SAAUgI,IA0ChB,sBAAKvI,UAAU,WAAf,UACI,oBAAIA,UAAU,oBAAd,sCACA,uBAAMA,UAAU,iBAAiBuD,SAnBzC,SAAkBgE,GACdA,EAAElD,iBACFtE,EACKiJ,QAAQjB,EAAKvH,MAAOuH,EAAKD,UACzBjC,MAAK,WACFyC,GAAgB,GAChBJ,EAAgB,8FAEnBS,OAAM,SAACpB,GACJW,EAAgB,0MAEnBU,SAAQ,WACLG,GAAgB,OAOpB,UACI,uBACI/G,KAAK,QACLhC,UAAU,kBACVkF,YAAY,QACZlC,MAAO+E,EAAKvH,MACZ8D,SAAUA,IAEd,uBACItC,KAAK,WACLhC,UAAU,kBACVkF,YAAY,uCACZlC,MAAO+E,EAAKD,SACZxD,SAAUA,IAEd,wBAAQtE,UAAU,0BAAlB,+CAEJ,cAAC,EAAD,CACIiD,OAAQ6F,EACR5F,QA7CZ,WACI6F,GAAgB,GACZV,GACAtI,EAAMkJ,cA2CFlH,KAAK,QACL2E,OAAQ2B,EAJZ,SAMKJ,Q,QCpEFiB,EAdQ,SAAC,GAAwC,IAA3BC,EAA0B,EAArCC,UAAyBrJ,EAAY,6BAC3D,OACI,cAAC,IAAD,UACK,kBACGA,EAAMQ,SACF,cAAC4I,EAAD,eAAepJ,IAEf,cAAC,IAAD,CAAUO,GAAG,kBCClB+I,EARG,SAACtJ,GACf,OACI,cAAC,IAAD,UACK,kBAAOA,EAAMuJ,UAAYvJ,EAAMqD,SAAW,wFC4CxCmG,EAFF,I,WA/CT,WAAYC,GAAU,oBAClBhE,KAAKgE,QAAUA,E,6DAGF1D,GACb,OAAIA,EAAIQ,GAAWR,EAAIS,OAChBT,EACFS,OACAV,MAAK,SAACC,GAAD,OAASU,QAAQC,OAAO,IAAIgD,MAAM3D,EAAI4D,SAAW5D,EAAI6D,a,+BAG1DnJ,EAAOsH,GACZ,OAAOnC,MAAM,GAAD,OAAIH,KAAKgE,QAAT,WAA2B,CACnC5D,OAAQ,OACRL,QAAS,CACL,eAAgB,oBAEpBS,KAAMC,KAAKC,UAAU,CACjB4B,WACAtH,YAELqF,KAAKL,KAAKoE,oB,4BAGXpJ,EAAOsH,GACT,OAAOnC,MAAM,GAAD,OAAIH,KAAKgE,QAAT,WAA2B,CACnC5D,OAAQ,OACRL,QAAS,CACL,eAAgB,oBAEpBS,KAAMC,KAAKC,UAAU,CACjB4B,WACAtH,YAELqF,KAAKL,KAAKoE,oB,kCAGLC,GACR,OAAOlE,MAAM,GAAD,OAAIH,KAAKgE,QAAT,aAA6B,CACrCjE,QAAS,CACL,eAAgB,mBAChBuE,cAAc,UAAD,OAAYD,MAE9BhE,KAAKL,KAAKoE,sB,KAIR,CAAS,iCCgVPG,MA9Wf,WAAgB,IAAD,EACiDhG,oBAAS,GAD1D,mBACJiG,EADI,KACoBC,EADpB,OAE2ClG,oBAAS,GAFpD,mBAEJmG,EAFI,KAEiBC,EAFjB,OAG+CpG,oBAAS,GAHxD,mBAGJqG,EAHI,KAGmBC,EAHnB,OAIyCtG,oBAAS,GAJlD,mBAIJuG,EAJI,KAIgBC,EAJhB,OAK6BxG,oBAAS,GALtC,mBAKJyG,EALI,KAKUC,EALV,OAMyB1G,oBAAS,GANlC,mBAMJ2G,EANI,KAMQC,EANR,OAO2B5G,mBAAS,IAPpC,mBAOJ5C,EAPI,KAOSyJ,EAPT,OAQe7G,mBAAS,IARxB,mBAQJzB,EARI,KAQGuI,EARH,OASyB9G,mBAAS,CACzC+G,OAAQ,yDACRC,QAAS,iBAXF,oBASJpH,GATI,MASQqH,GATR,SAcuBjH,mBAAS,IAdhC,qBAcJH,GAdI,MAcOqH,GAdP,SAeqClH,mBAAS,IAf9C,qBAeJF,GAfI,MAecqH,GAfd,SAgBuBnH,oBAAS,GAhBhC,qBAgBJV,GAhBI,MAgBO8H,GAhBP,SAiBuBpH,oBAAS,GAjBhC,qBAiBJqH,GAjBI,MAiBOC,GAjBP,SAkBqCtH,oBAAS,GAlB9C,qBAkBJuH,GAlBI,MAkBcC,GAlBd,SAmBqBxH,oBAAS,GAnB9B,qBAmBJxD,GAnBI,MAmBMiL,GAnBN,SAoBazH,mBAAS,IApBtB,qBAoBJ0H,GApBI,MAoBEC,GApBF,SAqBuB3H,oBAAS,GArBhC,qBAqBJuF,GArBI,MAqBOqC,GArBP,MAwBX,SAAS1C,KACL,IAAMY,EAAM+B,aAAaC,QAAQ,OAC7BhC,EACAN,EAAKuC,YAAYjC,GACZhE,MAAK,SAACC,GACH0F,IAAY,GACZE,GAAQ,CACJlL,MAAOsF,EAAIiC,KAAKvH,MAChBgE,GAAIsB,EAAIiC,KAAKxG,SAGpBoH,OAAM,SAACpB,GAAD,OAAOwE,QAAQpC,MAAMpC,EAAEmC,YAC7Bd,SAAQ,WACL+C,IAAa,MAGrBA,IAAa,GAKrB,SAASpJ,GAAiB6B,GAClBA,EAAMG,OAAOyH,SAASC,OACtBhB,GAAa,IACbI,IAAa,KAEbJ,GAAa7G,EAAMG,OAAO2H,mBAC1Bb,IAAa,IAIrB,SAASvH,GAAwBM,GACzBA,EAAMG,OAAOyH,SAASC,OACtBf,GAAoB,IACpBK,IAAoB,KAEpBL,GAAoB9G,EAAMG,OAAO2H,mBACjCX,IAAoB,IAmM5B,SAASY,KACLlC,GAA0B,GAC1BE,GAAuB,GACvBE,GAAyB,GACzBI,GAAgB,GAChBF,GAAsB,GACtBc,IAAa,GACbE,IAAoB,GAkBxB,OAxNApH,qBAAU,WAMN,OAFIgH,MAHCC,KAAcE,KAKZ,WACHH,IAAa,MAElB,CAACC,GAAWE,KAGfnH,qBAAU,WACN8E,KACA5D,EAAI+G,cACCvG,MAAK,SAACkC,GACH6C,EAAe7C,MAElBY,OAAM,SAAC0D,GACJN,QAAQO,IAAID,MAEpBhH,EAAIkH,kBACC1G,MAAK,SAACvD,GACHuI,EAASvI,MAEZqG,OAAM,SAAC0D,GACJN,QAAQO,IAAID,QAErB,IAGHlI,qBAAU,WACN,SAASqI,EAAepI,GACF,WAAdA,EAAM8C,KACNiF,KAIR,SAASM,EAAqBrI,GAC1B,IAAMsI,EAAQvF,SAASwF,cAAc,iBACjCvI,EAAMG,SAAWmI,GAGrBP,KAMJ,OAHAhF,SAASC,iBAAiB,QAASqF,GACnCtF,SAASC,iBAAiB,UAAWoF,GAE9B,WACHrF,SAASE,oBAAoB,UAAWmF,GACxCrF,SAASE,oBAAoB,QAASoF,MAE3C,IAoKC,cAAC9L,EAAmBiM,SAApB,CAA6B5J,MAAO7B,EAApC,SACI,sBAAKnB,UAAU,OAAf,UACI,cAAC,EAAD,CACIO,SAAUA,GACVC,MAAOiL,GAAKjL,MACZE,UAXhB,WACIkL,aAAaiB,QACbrB,IAAY,MAWJ,cAAC,EAAD,CAAWlC,UAAWA,GAAtB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOjJ,KAAK,WAAZ,SACI,cAAC,EAAD,CACI2I,QAvB5B,SAAqBxI,EAAOsH,GACxB,OAAOyB,EAAKuD,MAAMtM,EAAOsH,GAAUjC,MAAK,SAACC,GACrC8F,aAAamB,QAAQ,MAAOjH,EAAIkH,WAsBZzM,SAAUA,GACV0I,WAAYA,OAGpB,cAAC,IAAD,CAAO5I,KAAK,WAAZ,SACI,cAAC,EAAD,CACIqI,WAlC5B,SAAwBlI,EAAOsH,GAC3B,OAAOyB,EAAK0D,SAASzM,EAAOsH,IAkCJvH,SAAUA,OAGlB,cAAC,EAAD,CACIA,SAAUA,GACVF,KAAK,IACL+I,UAAWlH,EACXC,cAxExB,WACI8H,GAA0B,IAwEN7H,WArExB,WACI+H,GAAuB,IAqEH9H,aAlExB,WACIgI,GAAyB,GACzBgB,IAAa,IAiEOrK,YAhFxB,SAAyBD,GACrB0J,EAAgB1J,IAgFIuB,MAAOA,EACPrB,WAhMxB,SAAwBF,GACpB,IAAMU,EAAUV,EAAKW,MAAMC,MAAK,SAACC,GAAD,OAAOA,EAAEL,MAAQJ,EAAYI,OAE7D8D,EAAI6H,qBAAqBnM,EAAKQ,KAAME,GAC/BoE,MAAK,SAACsH,GACH,IAAMC,EAAW9K,EAAMG,KAAI,SAAC4K,GAAD,OACvBA,EAAE9L,MAAQR,EAAKQ,IAAM4L,EAAUE,KAEnCxC,EAASuC,MAEZzE,OAAM,SAAC0D,GACJN,QAAQO,IAAID,OAsLAnL,gBAjExB,SAAiCH,GAC7BwJ,GAAsB,GACtBI,EAAc5J,GACdsK,IAAa,GACbE,IAAoB,IA8DAhJ,iBAAkBA,UAI9B,cAAC,EAAD,IACA,cAAC,EAAD,CACIU,OAAQqH,EACRpH,QAASiJ,GACTtF,aA1LhB,SAA0B9F,GACtBiK,GAAc,2BACPrH,IADM,IAEToH,QAAS,yDAEb1F,EAAIqF,WAAW3J,EAAKQ,KACfsE,MAAK,WACF,IAAMuH,EAAW9K,EAAMgL,QAAO,SAACD,GAAD,OAAOA,EAAE9L,MAAQR,EAAKQ,OACpDsJ,EAASuC,MAEZvH,MAAK,WACFsG,KACAnB,GAAc,2BACPrH,IADM,IAEToH,QAAS,qBAGhBpC,OAAM,SAAC0D,GACJN,QAAQO,IAAID,OAyKRtL,KAAM2J,EACN/G,WAAYA,GAAWoH,QACvB1H,UAAWA,KAEf,cAAC,EAAD,CACIJ,OAAQiH,EACRhH,QAASiJ,GACT/J,WA3KhB,YAA+C,IAAfL,EAAc,EAAdA,KAAMD,EAAQ,EAARA,KAClCkJ,GAAc,2BACPrH,IADM,IAETmH,OAAQ,qEAEZzF,EAAIkI,WAAWxL,EAAMD,GAChB+D,MAAK,SAAC9E,GACH8J,EAAS,CAAC9J,GAAF,mBAAWuB,QAEtBuD,MAAK,WACFmF,GAAc,2BACPrH,IADM,IAETmH,OAAQ,4DAEZqB,QAEHxD,OAAM,SAAC0D,GACJN,QAAQO,IAAID,OA2JR1I,WAAYA,GAAWmH,OACvBlH,UAAWA,GACXC,iBAAkBA,GAClBtB,iBAAkBA,GAClBuB,wBAAyBA,GACzBT,UAAWA,KAEf,cAAC,EAAD,CACIJ,OAAQmH,EACRlH,QAASiJ,GACTrH,eAjKhB,YAAyC,IAAXpC,EAAU,EAAVA,OAC1BsI,GAAc,2BACPrH,IADM,IAETmH,OAAQ,qEAEZzF,EAAImI,cAAc9K,GACbmD,MAAK,WACF+E,EAAe,2BACRzJ,GADO,IAEVuB,OAAQA,QAGfmD,MAAK,WACFsG,KACAnB,GAAc,2BACPrH,IADM,IAETmH,OAAQ,+DAGfnC,OAAM,SAAC0D,GACJN,QAAQO,IAAID,OA8IR1I,WAAYA,GAAWmH,OACvBjH,iBAAkBA,GAClBC,wBAAyBA,GACzBT,UAAWA,KAEf,cAAC,EAAD,CACIJ,OAAQ+G,EACR9G,QAASiJ,GACTzI,aAlJhB,YAA4C,IAAhB3B,EAAe,EAAfA,KAAMa,EAAS,EAATA,MAC9BoI,GAAc,2BACPrH,IADM,IAETmH,OAAQ,qEAEZzF,EAAIoI,YAAY1L,EAAMa,GACjBiD,MAAK,WACF+E,EAAe,2BACRzJ,GADO,IAEVY,KAAMA,EACNa,MAAOA,QAGdiD,MAAK,WACFsG,KACAnB,GAAc,2BACPrH,IADM,IAETmH,OAAQ,+DAGfnC,OAAM,SAAC0D,GACJN,QAAQO,IAAID,OA8HR1I,WAAYA,GAAWmH,OACvBlH,UAAWA,GACXC,iBAAkBA,GAClBtB,iBAAkBA,GAClBuB,wBAAyBA,GACzBT,UAAWA,KAGf,cAAC,EAAD,CAAYtC,KAAMyJ,EAActH,QAASiJ,WC9W1CuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/H,MAAK,YAAkD,IAA/CgI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRjH,SAASkH,eAAe,SAM5BX,M","file":"static/js/main.67743d9d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import {Link, Route, Switch} from \"react-router-dom\";\nimport logo from \"../images/logo.svg\";\n\nfunction Header(props) {\n\n    return (\n        <header className=\"header section\">\n            <img\n                className=\"header__logo\"\n                src={logo}\n                alt=\"Логотип Mesto Russia\"\n            />\n            <Switch>\n                <Route exact path=\"/sign-in\">\n                    <Link className=\"header__link\" to=\"/sign-up\">\n                        Регистрация\n                    </Link>\n                </Route>\n                <Route exact path=\"/sign-up\">\n                    <Link className=\"header__link\" to=\"/sign-in\">\n                        Войти\n                    </Link>\n                </Route>\n                <Route path=\"/\">\n                    <div className=\"header__right-block\">\n                        {props.loggedIn && (\n                            <p className=\"header__email\">{props.email}</p>\n                        )}\n                        {props.email && (\n                            <Link\n                                className=\"header__sign-out\"\n                                to=\"/sign-up\"\n                                onClick={props.onSignout}\n                            >\n                                Выйти\n                            </Link>\n                        )}\n                    </div>\n                </Route>\n            </Switch>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Card({ card, onCardClick, onCardLike, onConfirmDelete }) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const isOwn = card.owner._id === currentUser._id;\n    const cardDeleteButtonClassName = (\n        `${isOwn ? 'element__delete-button buttons' : 'element__delete-button_hidden'}`\n    )\n        \n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    const cardLikeButtonClassName = (\n        `element__like-button buttons ${isLiked ? 'element__like-button_active' : ''}`\n    )\n\n    function handleClick() {\n        onCardClick(card);\n    }\n\n    function handleLikeClick() {\n        onCardLike(card)\n    }\n\n    function handleDeleteClick() {\n        onConfirmDelete(card);\n    }\n\n    return (\n        <li className=\"elements__item\">\n            <figure className=\"element\">\n                <img\n                    src={card.link}\n                    alt={card.name}\n                    className=\"element__image\"\n                    onClick={handleClick}\n                />\n                <div className=\"element__body\">\n                    <p className=\"element__figcaption section__subtitle\">\n                        {card.name}\n                    </p>\n                    <div className=\"element__like-group\">\n                        <button\n                            className={cardLikeButtonClassName}\n                            type=\"button\"\n                            onClick={handleLikeClick}\n                        ></button>\n                        <div className=\"element__like-count\">\n                            {card.likes.length}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    className={cardDeleteButtonClassName}\n                    type=\"button\"\n                    onClick={handleDeleteClick}\n                ></button>\n            </figure>\n        </li>\n    );\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/edit-avatar.a086f758.svg\";","import React from \"react\";\nimport Card from \"./Card\";\nimport photoEdit from \"../images/edit-avatar.svg\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Main({\n    onEditProfile,\n    onAddPlace,\n    onEditAvatar,\n    onCardClick,\n    cards,\n    onCardLike,\n    onConfirmDelete,\n    handleChangeName\n}) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    //  Запись данных карточки в шаблон\n    const cardList = cards.map((card) => (\n        <Card\n            key={card._id}\n            card={card}\n            onCardClick={onCardClick}\n            onCardLike={onCardLike}\n            onConfirmDelete={onConfirmDelete}\n        />\n    ));\n\n    return (\n        <main className=\"content section section__content\">\n            <section className=\"profile section__profile\">\n                <div className=\"profile__wrap\">\n                    <img\n                        src={currentUser.avatar}\n                        alt={currentUser.name}\n                        className=\"profile__avatar\"\n                    />\n\n                    <img\n                        src={photoEdit}\n                        alt=\"Смена аватара\"\n                        className=\"profile__avatar-edit\"\n                        onClick={onEditAvatar}\n                    />\n                </div>\n\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__author section__title\">\n                        {currentUser.name}\n                    </h1>\n                    <button\n                        type=\"button\"\n                        className=\"profile__edit-button buttons\"\n                        onClick={onEditProfile}\n                    ></button>\n                    <p className=\"profile__author-status section__subtitle\">\n                        {currentUser.about}\n                    </p>\n                </div>\n                <button\n                    type=\"button\"\n                    className=\"profile__add-button buttons\"\n                    onClick={onAddPlace}\n                ></button>\n            </section>\n\n            <section className=\"elements\">\n                <ul className=\"elements__list\">{cardList}</ul>\n            </section>\n        </main>\n    );\n}\n\nexport default Main;\n","function Footer() {\n    return (\n        <footer className=\"footer section section__footer\">\n            <p className=\"section__text\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;\n","function PopupWithForm({\n    name,\n    title,\n    value,\n    isOpen,\n    onClose,\n    handleSubmit,\n    children,\n    formValid,\n}) {\n    return (\n        <section\n            className={`popup section__popup popup_type_${name} ${\n                isOpen ? \"popup_opened\" : \"\"\n            }`}\n        >\n            <div className=\"popup__container\">\n                <form\n                    name={name}\n                    className={`popup__form popup__form_type_${name}`}\n                    noValidate\n                    onSubmit={handleSubmit}\n                >\n                    <h2 className=\"popup__heading section__subtitle\">\n                        {title}\n                    </h2>\n                    <fieldset className=\"popup__fields\">{children}</fieldset>\n                    <input\n                        name=\"save-button\"\n                        type=\"submit\"\n                        value={value}\n                        className={`popup__save-button ${\n                            !formValid ? \"popup__save-button_invalid\" : \"\"\n                        }`}\n                        disabled={!formValid}\n                    />\n                    <button\n                        name=\"close-button\"\n                        type=\"button\"\n                        className=\"popup__close-button buttons\"\n                        onClick={onClose}\n                    ></button>\n                </form>\n            </div>\n        </section>\n    );\n}\n\nexport default PopupWithForm;\n","import { useState, useContext, useEffect } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditProfilePopup({\n    isOpen,\n    onClose,\n    onUpdateUser,\n    valueInput,\n    nameError,\n    descriptionError,\n    handleChangeName,\n    handleChangeDescription,\n    formValid\n}) {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const currentUser = useContext(CurrentUserContext);\n\n    useEffect(() => { \n        setName(currentUser.name); \n        setDescription(currentUser.about); \n    }, [isOpen, currentUser]);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n            onUpdateUser({\n                name,\n                about: description,\n            });\n    }\n    return (\n        <PopupWithForm\n            name=\"popup-edit-profile\"\n            title=\"Редактировать профиль\"\n            value={valueInput}\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}\n            formValid={formValid}\n        >\n            <input\n                name=\"name\"\n                type=\"text\"\n                value={name || \"\"}\n                onChange={(event) => {\n                    handleChangeName(event);\n                    setName(event.target.value);\n                }}\n                className={`popup__input popup__input_name ${\n                    nameError ? \"popup__input_state_invalid\" : \"\"\n                }`}\n                id=\"user-name\"\n                minLength=\"2\"\n                maxLength=\"40\"\n                required\n                autoComplete=\"off\"\n            />\n            <span id=\"user-name-error\" className=\"error\">\n                {nameError}\n            </span>\n\n            <input\n                name=\"job\"\n                type=\"text\"\n                value={description || \"\"}\n                onChange={(event) => {\n                    handleChangeDescription(event);\n                    setDescription(event.target.value);\n                }}\n                className={`popup__input popup__input_job ${\n                    descriptionError ? \"popup__input_state_invalid\" : \"\"\n                }`}\n                id=\"about\"\n                minLength=\"2\"\n                maxLength=\"200\"\n                required\n                autoComplete=\"off\"\n            />\n            <span id=\"about-error\" className=\"error\">\n                {descriptionError}\n            </span>\n        </PopupWithForm>\n    );\n}\n\nexport default EditProfilePopup;\n","import { useEffect, useRef } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({\n    isOpen,\n    onClose,\n    onUpdateAvatar,\n    valueInput,\n    descriptionError,\n    handleChangeDescription,\n    formValid\n}) {\n    const avatarRef = useRef();\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        onUpdateAvatar({\n            avatar: avatarRef.current.value,\n        });\n    }\n    useEffect(() => {\n        avatarRef.current.value = '';\n    }, [isOpen]);\n\n    return (\n        <PopupWithForm\n            name=\"popup-update-avatar\"\n            title=\"Обновить аватар\"\n            value={valueInput}\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}\n            formValid={formValid}\n        >\n            <input\n                name=\"link\"\n                type=\"url\"\n                placeholder=\"Ссылка на картинку\"\n                className={`popup__input popup__input_link ${descriptionError ? \"popup__input_state_invalid\" : \"\"}`}\n                required\n                id=\"link\"\n                autoComplete=\"off\"\n                ref={avatarRef}\n                onChange={(event) => {\n                    handleChangeDescription(event);\n                }}\n            />\n            <span className=\"error\" id=\"link-error\">{descriptionError}</span>\n        </PopupWithForm>\n    );\n}\n\nexport default EditAvatarPopup;\n","function ImagePopup({ card, onClose }) {\n\n    return (\n        <section\n            className={`popup section__popup popup_type_popup-gallery ${\n                card ? \"popup_opened\" : \"\"\n            }`}\n        >\n            <div className=\"popup__gallery\">\n                <img\n                    src={card.link}\n                    alt={card.name}\n                    className=\"popup__image\"\n                />\n                <p className=\"popup__title\">{card.name}</p>\n                <button\n                    name=\"close-button\"\n                    type=\"button\"\n                    className=\"popup__close-button buttons\"\n                    onClick={onClose}\n                ></button>\n            </div>\n        </section>\n    );\n}\n\nexport default ImagePopup;\n","class Api {\n    constructor({ baseUrl, headers }) {\n        this._url = baseUrl;\n        this._headers = headers;\n    }\n    // Получить начальные карточки\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            method: \"GET\",\n            headers: this._headers,\n        }).then((res) => this._addResult(res));\n    }\n    // Добавить новую карточку\n    addNewCard(name, link) {\n        return fetch(`${this._url}/cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                link: link,\n            }),\n        }).then((res) => this._addResult(res));\n    }\n\n    // Обновляем статус лайков карточки\n    changeLikeCardStatus(cardId, noIsLiked) {\n        if (noIsLiked) {\n            return fetch(`${this._url}/cards/likes/${cardId}`, {\n                method: \"PUT\",\n                headers: this._headers,\n            }).then((res) => this._addResult(res));\n        } else {\n            return fetch(`${this._url}/cards/likes/${cardId}`, {\n                method: \"DELETE\",\n                headers: this._headers,\n            }).then((res) => this._addResult(res));\n        }\n    }\n\n    // Удаление карточки\n    deleteCard(cardId) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers,\n        }).then((res) => this._addResult(res));\n    }\n    // Получить данные пользователя\n    getUserInfo() {\n        return fetch(`${this._url}/users/me`, {\n            method: \"GET\",\n            headers: this._headers,\n        }).then((res) => this._addResult(res));\n    }\n    // Редактирование данных пользователя\n    setUserInfo(name, about) {\n        return fetch(`${this._url}/users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: about,\n            }),\n        }).then((res) => this._addResult(res));\n    }\n    // Редактирование аватара пользователя\n    setUserAvatar(url) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: url,\n            }),\n        }).then((res) => this._addResult(res));\n    }\n    _addResult(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n}\n\n// Получение данных с сервера\nconst api = new Api({\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-18\",\n    headers: {\n        authorization: \"45380a0b-d1c3-4f21-8b0c-7fe08b9cb145\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n\nexport default api;\n","import PopupWithForm from \"./PopupWithForm\";\n\nfunction ConfirmPopup({ isOpen, onClose, onCardDelete, card, valueInput, formValid}) {\n    function handleSubmit(event) {\n        event.preventDefault();\n        onCardDelete(card);\n\n    }\n\n    return (\n        <PopupWithForm\n            name=\"popup-confirm\"\n            title=\"Вы уверены?\"\n            value={valueInput}\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}\n            formValid={formValid}\n        ></PopupWithForm>\n    );\n}\n\nexport default ConfirmPopup;\n","import { useState, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup({\n    isOpen,\n    onClose,\n    onAddPlace,\n    valueInput,\n    nameError,\n    descriptionError,\n    handleChangeName,\n    handleChangeDescription,\n    formValid\n}) {\n    const [name, setName] = useState();\n    const [link, setLink] = useState();\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        onAddPlace({\n            name,\n            link,\n        });\n    }\n\n    useEffect(() => {\n        setName(\"\");\n        setLink(\"\");\n    }, [isOpen]);\n\n    return (\n        <PopupWithForm\n            name=\"popup-add-card\"\n            title=\"Новое место\"\n            value={valueInput}\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}\n            formValid={formValid}\n            nameError={nameError}\n            descriptionError={descriptionError}\n        >\n            <input\n                name=\"name\"\n                type=\"text\"\n                value={name || \"\"}\n                placeholder=\"Название\"\n                className={`popup__input popup__input_title ${nameError ? \"popup__input_state_invalid\" : \"\"\n                }`}\n                minLength=\"2\"\n                maxLength=\"30\"\n                required\n                id=\"name-card\"\n                autoComplete=\"off\"\n                onChange={(event) => {\n                    handleChangeName(event);\n                    setName(event.target.value);\n                }}\n            />\n            <span id=\"name-card-error\" className=\"error\">\n                {nameError}\n            </span>\n            <input\n                name=\"link\"\n                type=\"url\"\n                value={link || \"\"}\n                placeholder=\"Ссылка на картинку\"\n                className={`popup__input popup__input_link ${descriptionError ? \"popup__input_state_invalid\" : \"\"\n                }`}\n                required\n                id=\"link\"\n                autoComplete=\"off\"\n                onChange={(event) => {\n                    handleChangeDescription(event);\n                    setLink(event.target.value);\n                }}\n            />\n            <span className=\"error\" id=\"link-error\">\n                {descriptionError}\n            </span>\n        </PopupWithForm>\n    );\n}\n\nexport default AddPlacePopup;\n","import React from \"react\";\n\nfunction Popup(props) {\n    const [isOpen, onClose] = [props.isOpen, props.onClose];\n    React.useEffect(() => {\n        if (!isOpen) return;\n        const handleEscapeClose = (event) => {\n            if (event.key === \"Escape\") {\n                onClose();\n            }\n        };\n        document.addEventListener(\"keydown\", handleEscapeClose);\n        return () => {\n            document.removeEventListener(\"keydown\", handleEscapeClose);\n        };\n    }, [isOpen, onClose]);\n\n    return (\n        <section\n            className={`popup section__popup popup_${props.name} ${\n                isOpen && \"popup_opened\"\n            }`}\n            onMouseDown={(e) =>\n                e.target.classList.contains(\"popup\") && onClose()\n            }\n        >\n            <div className=\"popup__container\">\n                {props.children}\n                <button\n                    name=\"close-button\"\n                    type=\"button\"\n                    className=\"popup__close-button buttons\"\n                    onClick={onClose}\n                ></button>\n            </div>\n        </section>\n    );\n}\n\nexport default Popup;\n","export default __webpack_public_path__ + \"static/media/register-ok.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/register-fail.df8eddf6.svg\";","import Popup from \"./Popup\";\nimport imageOk from \"../images/register-ok.svg\";\nimport imageFail from \"../images/register-fail.svg\";\n\nfunction InfoToolTip(props) {\n    return (\n        <Popup isOpen={props.isOpen} onClose={props.onClose} name={props.name}>\n            <img\n                src={props.status ? imageOk : imageFail}\n                alt=\"\"\n                className=\"popup__info-image\"\n            />\n            <p className=\"popup__info-message\">{props.children}</p>\n        </Popup>\n    );\n}\n\nexport default InfoToolTip;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport InfoToolTip from \"./InfoTooltip\";\n\nconst Register = (props) => {\n    const [ data, setData ] = useState({\n        email: '',\n        password: '',\n    })\n\n    const [popupMessage, setPopupMessage] = useState(\"\");\n    const [isRegisterPopup, setIsRegisterPopup] = useState(false);\n    const [submitStatus, setSubmitStatus] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (props.loggedIn) history.push(\"/\");\n    }, [props.loggedIn, history]);\n\n    function onChange(e) {\n        const { name, value } = e.target\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n\n    function onClose() {\n        setIsRegisterPopup(false);\n        if (submitStatus) {\n            history.push(\"/sign-in\");\n        }\n    }\n\n    function onSubmit(e) {\n        e.preventDefault();\n        props\n            .onRegister(data.email, data.password)\n            .then(() => {\n                setSubmitStatus(true);\n                setPopupMessage(\"Вы успешно зарегистрировались!\");\n            })\n            .catch(() => {\n                setPopupMessage(\"Что-то пошло не так! Попробуйте ещё раз.\");\n            })\n            .finally(() => {\n                setIsRegisterPopup(true);\n            });\n    }\n\n    return (\n        <div className=\"register\">\n            <h2 className=\"register__heading\">Регистрация</h2>\n            <form\n                onSubmit={onSubmit}\n                className=\"register__form\"\n                autoComplete=\"off\"\n            >\n                <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={data.email}\n                    onChange={onChange}\n                    className=\"register__input\"\n                    placeholder=\"Email\"\n                />\n                <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={data.password}\n                    onChange={onChange}\n                    className=\"register__input\"\n                    placeholder=\"Пароль\"\n                />\n                <button type=\"submit\" className=\"register__submit-button\">\n                    Зарегистрироваться\n                </button>\n            </form>\n            <p className=\"register__title\">\n                Уже регистрировались?\n                <Link className=\"register__link\" to=\"/sign-in\">\n                    Войти\n                </Link>\n            </p>\n            <InfoToolTip\n                isOpen={isRegisterPopup}\n                onClose={onClose}\n                name=\"register\"\n                status={submitStatus}\n            >\n                {popupMessage}\n            </InfoToolTip>\n        </div>\n    );\n};\n\nexport default Register;\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport InfoToolTip from \"./InfoTooltip\";\n\nfunction Login(props) {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n    });\n    // const [email, setEmail] = useState(\"\");\n    // const [password, setPassword] = useState(\"\");\n    const [popupMessage, setPopupMessage] = useState(\"\");\n    const [isLoginPopup, setIsLoginPopup] = useState(false);\n    const [submitStatus, setSubmitStatus] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (props.loggedIn) history.push(\"/\");\n    }, [props.loggedIn, history]);\n\n    function onChange(e) {\n        const { name, value } = e.target;\n        setData({\n            ...data,\n            [name]: value\n        });\n    }\n\n    // function onChangeEmail(e) {\n    //     setEmail(e.target.value);\n    // }\n\n    // function onChangePassword(e) {\n    //     setPassword(e.target.value);\n    // }\n\n    function onClose() {\n        setIsLoginPopup(false);\n        if (submitStatus) {\n            props.checkToken();\n        }\n    }\n\n    function onSubmit(e) {\n        e.preventDefault();\n        props\n            .onLogin(data.email, data.password)\n            .then(() => {\n                setSubmitStatus(true);\n                setPopupMessage(\"Вы успешно вошли!\");\n            })\n            .catch((e) => {\n                setPopupMessage(\"Что-то пошло не так! Попробуйте ещё раз.\");\n            })\n            .finally(() => {\n                setIsLoginPopup(true);\n            });\n    }\n\n    return (\n        <div className=\"register\">\n            <h2 className=\"register__heading\">Вход</h2>\n            <form className=\"register__form\" onSubmit={onSubmit}>\n                <input\n                    type=\"email\"\n                    className=\"register__input\"\n                    placeholder=\"Email\"\n                    value={data.email}\n                    onChange={onChange}\n                />\n                <input\n                    type=\"password\"\n                    className=\"register__input\"\n                    placeholder=\"Пароль\"\n                    value={data.password}\n                    onChange={onChange}\n                />\n                <button className=\"register__submit-button\">Войти</button>\n            </form>\n            <InfoToolTip\n                isOpen={isLoginPopup}\n                onClose={onClose}\n                name=\"login\"\n                status={submitStatus}\n            >\n                {popupMessage}\n            </InfoToolTip>\n        </div>\n    );\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n    return (\n        <Route>\n            {() =>\n                props.loggedIn ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"./sign-in\" />\n                )\n            }\n        </Route>\n    );\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nconst MainRoute = (props) => {\n    return (\n        <Route>\n            {() => (props.isChecked ? props.children : <p>Загрузка...</p>)}\n        </Route>\n    );\n};\n\nexport default MainRoute;\n","class Auth {\n    constructor(baseURL) {\n        this.baseURL = baseURL;\n    }\n\n    _getResponseData(res) {\n        if (res.ok) return res.json();\n        return res\n            .json()\n            .then((res) => Promise.reject(new Error(res.message || res.error)));\n    }\n\n    register(email, password) {\n        return fetch(`${this.baseURL}/signup`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                password,\n                email\n            })\n        }).then(this._getResponseData);\n    }\n\n    login(email, password) {\n        return fetch(`${this.baseURL}/signin`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                password,\n                email\n            })\n        }).then(this._getResponseData);\n    }\n\n    getUserData(jwt) {\n        return fetch(`${this.baseURL}/users/me`, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${jwt}`\n            }\n        }).then(this._getResponseData);\n    }\n}\n\nconst auth = new Auth(\"https://auth.nomoreparties.co\");\n\nexport default auth;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from 'react-router-dom';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport ConfirmPopup from \"./ConfirmPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport MainRoute from './MainRoute';\nimport auth from \"../utils/auth\";\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(false);\n    const [deleteCard, setDeleteCard] = useState(false);\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [valueInput, setValueInput] = useState({\n        submit: \"Сохранить\",\n        confirm: \"Да\"\n    });\n\n    const [nameError, setNameError] = useState(\"\");\n    const [descriptionError, setDescriptionError] = useState(\"\");\n    const [formValid, setFormValid] = useState(false);\n    const [nameValid, setNameValid] = useState(false);\n    const [descriptionValid, setDescriptionValid] = useState(false);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [user, setUser] = useState({})\n    const [isChecked, setIsChecked] = useState(false);\n\n    // Проверка токена\n    function checkToken() {\n        const jwt = localStorage.getItem(\"jwt\");\n        if (jwt) {\n            auth.getUserData(jwt)\n                .then((res) => {\n                    setLoggedIn(true);\n                    setUser({\n                        email: res.data.email,\n                        id: res.data._id\n                    });\n                })\n                .catch((e) => console.error(e.message))\n                .finally(() => {\n                    setIsChecked(true);\n                });\n        } else {\n            setIsChecked(true);\n        }\n    }\n\n    // Валидация изменения имени и названия\n    function handleChangeName(event) {\n        if (event.target.validity.valid) {\n            setNameError(\"\");\n            setNameValid(true);\n        } else {\n            setNameError(event.target.validationMessage);\n            setNameValid(false);\n        }\n    }\n    // Валидация изменения описания и ссылок\n    function handleChangeDescription(event) {\n        if (event.target.validity.valid) {\n            setDescriptionError(\"\");\n            setDescriptionValid(true);\n        } else {\n            setDescriptionError(event.target.validationMessage);\n            setDescriptionValid(false);\n        }\n    }\n\n    useEffect(() => {\n        if (!nameValid || !descriptionValid) {\n            setFormValid(false);\n        } else {\n            setFormValid(true);\n        }\n        return () => {\n            setFormValid(false);\n        };\n    }, [nameValid, descriptionValid]);\n\n    // Получение данных пользователя, карточек с сервера\n    useEffect(() => {\n        checkToken();\n        api.getUserInfo()\n            .then((data) => {\n                setCurrentUser(data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n        api.getInitialCards()\n            .then((cards) => {\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    //  Закрытие попапа по Esc и клику на оверлей\n    useEffect(() => {\n        function handleEscClose(event) {\n            if (event.key === \"Escape\") {\n                closeAllPopups();\n            }\n        }\n\n        function handleClickOnOverlay(event) {\n            const popup = document.querySelector(\".popup_opened\");\n            if (event.target !== popup) {\n                return;\n            }\n            closeAllPopups();\n        }\n\n        document.addEventListener(\"click\", handleClickOnOverlay);\n        document.addEventListener(\"keydown\", handleEscClose);\n\n        return () => {\n            document.removeEventListener(\"keydown\", handleEscClose);\n            document.removeEventListener(\"click\", handleClickOnOverlay);\n        };\n    }, []);\n\n    //  Поставить/снять лайк\n    function handleCardLike(card) {\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                const newCards = cards.map((c) =>\n                    c._id === card._id ? newCard : c\n                );\n                setCards(newCards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    //  Удалить карточку\n    function handleCardDelete(card) {\n        setValueInput({\n            ...valueInput,\n            confirm: \"Удаление...\"\n        });\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = cards.filter((c) => c._id !== card._id);\n                setCards(newCards);\n            })\n            .then(() => {\n                closeAllPopups();\n                setValueInput({\n                    ...valueInput,\n                    confirm: \"Да\"\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    //  Добавить карточку\n    function handleAddPlaceSubmit({ name, link }) {\n        setValueInput({\n            ...valueInput,\n            submit: \"Сохранение...\"\n        });\n        api.addNewCard(name, link)\n            .then((card) => {\n                setCards([card, ...cards]);\n            })\n            .then(() => {\n                setValueInput({\n                    ...valueInput,\n                    submit: \"Сохранить\"\n                });\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    //  Обновить аватар\n    function handleUpdateAvatar({ avatar }) {\n        setValueInput({\n            ...valueInput,\n            submit: \"Сохранение...\"\n        });\n        api.setUserAvatar(avatar)\n            .then(() => {\n                setCurrentUser({\n                    ...currentUser,\n                    avatar: avatar\n                });\n            })\n            .then(() => {\n                closeAllPopups();\n                setValueInput({\n                    ...valueInput,\n                    submit: \"Сохранить\"\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    //  Обновить данные пользователя\n    function handleUpdateUser({ name, about }) {\n        setValueInput({\n            ...valueInput,\n            submit: \"Сохранение...\"\n        });\n        api.setUserInfo(name, about)\n            .then(() => {\n                setCurrentUser({\n                    ...currentUser,\n                    name: name,\n                    about: about\n                });\n            })\n            .then(() => {\n                closeAllPopups();\n                setValueInput({\n                    ...valueInput,\n                    submit: \"Сохранить\"\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    //  Присвоить значения карточке\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    //  Открыть попап редактирования профиля\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n    //  Открыть попап добавдения новой карточки\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n    //  Открыть попап редактирования аватара\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n        setNameValid(true);\n    }\n    //  Открыть попап подтверждения удаления карточки\n    function handleDeleteButtonClick(card) {\n        setIsConfirmPopupOpen(true);\n        setDeleteCard(card);\n        setNameValid(true);\n        setDescriptionValid(true);\n    }\n    //  Закрыть все попапы\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard(false);\n        setIsConfirmPopupOpen(false);\n        setNameValid(false);\n        setDescriptionValid(false);\n    }\n\n    function handleRegister(email, password) {\n        return auth.register(email, password);\n    }\n\n    function handleLogin(email, password) {\n        return auth.login(email, password).then((res) => {\n            localStorage.setItem(\"jwt\", res.token);\n        });\n    }\n\n    function handleSignout() {\n        localStorage.clear();\n        setLoggedIn(false);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"root\">\n                <Header\n                    loggedIn={loggedIn}\n                    email={user.email}\n                    onSignout={handleSignout}\n                />\n                <MainRoute isChecked={isChecked}>\n                    <Switch>\n                        <Route path=\"/sign-in\">\n                            <Login\n                                onLogin={handleLogin}\n                                loggedIn={loggedIn}\n                                checkToken={checkToken}\n                            />\n                        </Route>\n                        <Route path=\"/sign-up\">\n                            <Register\n                                onRegister={handleRegister}\n                                loggedIn={loggedIn}\n                            />\n                        </Route>\n                        <ProtectedRoute\n                            loggedIn={loggedIn}\n                            path=\"/\"\n                            component={Main}\n                            onEditProfile={handleEditProfileClick}\n                            onAddPlace={handleAddPlaceClick}\n                            onEditAvatar={handleEditAvatarClick}\n                            onCardClick={handleCardClick}\n                            cards={cards}\n                            onCardLike={handleCardLike}\n                            onConfirmDelete={handleDeleteButtonClick}\n                            handleChangeName={handleChangeName}\n                        />\n                    </Switch>\n                </MainRoute>\n                <Footer />\n                <ConfirmPopup\n                    isOpen={isConfirmPopupOpen}\n                    onClose={closeAllPopups}\n                    onCardDelete={handleCardDelete}\n                    card={deleteCard}\n                    valueInput={valueInput.confirm}\n                    formValid={formValid}\n                />\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                    valueInput={valueInput.submit}\n                    nameError={nameError}\n                    descriptionError={descriptionError}\n                    handleChangeName={handleChangeName}\n                    handleChangeDescription={handleChangeDescription}\n                    formValid={formValid}\n                />\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    valueInput={valueInput.submit}\n                    descriptionError={descriptionError}\n                    handleChangeDescription={handleChangeDescription}\n                    formValid={formValid}\n                />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                    valueInput={valueInput.submit}\n                    nameError={nameError}\n                    descriptionError={descriptionError}\n                    handleChangeName={handleChangeName}\n                    handleChangeDescription={handleChangeDescription}\n                    formValid={formValid}\n                />\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}