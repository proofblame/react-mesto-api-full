[{"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/index.js":"1","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/reportWebVitals.js":"2","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/App.js":"3","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/ImagePopup.js":"4","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Footer.js":"5","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Header.js":"6","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Main.js":"7","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/AddPlacePopup.js":"8","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/ConfirmPopup.js":"9","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js":"10","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/EditProfilePopup.js":"11","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Register.js":"12","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/ProtectedRoute.js":"13","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Login.js":"14","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/MainRoute.js":"15","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/contexts/CurrentUserContext.js":"16","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/utils/auth.js":"17","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/utils/api.js":"18","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/PopupWithForm.js":"19","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Card.js":"20","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/InfoTooltip.js":"21","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Popup.js":"22"},{"size":615,"mtime":1615714286101,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1610725726932,"results":"25","hashOfConfig":"24"},{"size":11238,"mtime":1616775468586,"results":"26","hashOfConfig":"24"},{"size":774,"mtime":1611407712347,"results":"27","hashOfConfig":"24"},{"size":214,"mtime":1610730462605,"results":"28","hashOfConfig":"24"},{"size":1500,"mtime":1615743838300,"results":"29","hashOfConfig":"24"},{"size":2322,"mtime":1616703278592,"results":"30","hashOfConfig":"24"},{"size":2379,"mtime":1615742390328,"results":"31","hashOfConfig":"24"},{"size":574,"mtime":1611687885290,"results":"32","hashOfConfig":"24"},{"size":1430,"mtime":1615742385780,"results":"33","hashOfConfig":"24"},{"size":2600,"mtime":1611778916093,"results":"34","hashOfConfig":"24"},{"size":3056,"mtime":1615744309146,"results":"35","hashOfConfig":"24"},{"size":434,"mtime":1615708113889,"results":"36","hashOfConfig":"24"},{"size":2630,"mtime":1615744294861,"results":"37","hashOfConfig":"24"},{"size":268,"mtime":1615713746908,"results":"38","hashOfConfig":"24"},{"size":85,"mtime":1611318116497,"results":"39","hashOfConfig":"24"},{"size":1350,"mtime":1616779739258,"results":"40","hashOfConfig":"24"},{"size":2622,"mtime":1616779744483,"results":"41","hashOfConfig":"24"},{"size":1498,"mtime":1611785449938,"results":"42","hashOfConfig":"24"},{"size":2030,"mtime":1616762264523,"results":"43","hashOfConfig":"24"},{"size":536,"mtime":1615744280928,"results":"44","hashOfConfig":"24"},{"size":1160,"mtime":1615733041710,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1wepc9a",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/index.js",[],["92","93"],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/reportWebVitals.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/App.js",["94"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport ConfirmPopup from './ConfirmPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport MainRoute from './MainRoute';\nimport auth from '../utils/auth';\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(false);\n  const [deleteCard, setDeleteCard] = useState(false);\n  const [currentUser, setCurrentUser] = useState({_id: null, avatar: ''});\n  const [cards, setCards] = useState([]);\n  const [valueInput, setValueInput] = useState({\n    submit: 'Сохранить',\n    confirm: 'Да',\n  });\n\n  const [nameError, setNameError] = useState('');\n  const [descriptionError, setDescriptionError] = useState('');\n  const [formValid, setFormValid] = useState(false);\n  const [nameValid, setNameValid] = useState(false);\n  const [descriptionValid, setDescriptionValid] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isChecked, setIsChecked] = useState(false);\n\n  // Проверка токена\n  function checkToken() {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      auth\n        .getUserData(jwt)\n        .then((res) => {\n          setLoggedIn(true);\n          setCurrentUser({\n            email: res.data.email,\n            id: res.data._id,\n            name: res.data.name,\n            avatar: res.data.avatar,\n            about: res.data.about\n          });\n          \n        })\n        .catch((e) => console.error(e.message))\n        .finally(() => {\n          setIsChecked(true);\n        });\n    } else {\n      setIsChecked(true);\n    }\n  }\n\n  // Валидация изменения имени и названия\n  function handleChangeName(event) {\n    if (event.target.validity.valid) {\n      setNameError('');\n      setNameValid(true);\n    } else {\n      setNameError(event.target.validationMessage);\n      setNameValid(false);\n    }\n  }\n  // Валидация изменения описания и ссылок\n  function handleChangeDescription(event) {\n    if (event.target.validity.valid) {\n      setDescriptionError('');\n      setDescriptionValid(true);\n    } else {\n      setDescriptionError(event.target.validationMessage);\n      setDescriptionValid(false);\n    }\n  }\n\n  useEffect(() => {\n    if (!nameValid || !descriptionValid) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n    return () => {\n      setFormValid(false);\n    };\n  }, [nameValid, descriptionValid]);\n\n  // Получение данных пользователя, карточек с сервера\n  useEffect(() => {\n    checkToken();\n    api\n      .getUserInfo()\n      .then((user) => {\n        setCurrentUser(user.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    api\n      .getInitialCards()\n      .then((cards) => {\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  //  Закрытие попапа по Esc и клику на оверлей\n  useEffect(() => {\n    function handleEscClose(event) {\n      if (event.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n\n    function handleClickOnOverlay(event) {\n      const popup = document.querySelector('.popup_opened');\n      if (event.target !== popup) {\n        return;\n      }\n      closeAllPopups();\n    }\n\n    document.addEventListener('click', handleClickOnOverlay);\n    document.addEventListener('keydown', handleEscClose);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n      document.removeEventListener('click', handleClickOnOverlay);\n    };\n  }, []);\n\n  //  Поставить/снять лайк\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i === currentUser._id);\n    console.log(card)\n\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //  Удалить карточку\n  function handleCardDelete(card) {\n    setValueInput({\n      ...valueInput,\n      confirm: 'Удаление...',\n    });\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n      })\n      .then(() => {\n        closeAllPopups();\n        setValueInput({\n          ...valueInput,\n          confirm: 'Да',\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //  Добавить карточку\n  function handleAddPlaceSubmit({ name, link }) {\n    setValueInput({\n      ...valueInput,\n      submit: 'Сохранение...',\n    });\n    api\n      .addNewCard(name, link)\n      .then((card) => {\n        setCards([card.data, ...cards]);\n      })\n      .then(() => {\n        setValueInput({\n          ...valueInput,\n          submit: 'Сохранить',\n        });\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  //  Обновить аватар\n  function handleUpdateAvatar({ avatar }) {\n    setValueInput({\n      ...valueInput,\n      submit: 'Сохранение...',\n    });\n    api\n      .setUserAvatar(avatar)\n      .then(() => {\n        setCurrentUser({\n          ...currentUser,\n          avatar: avatar,\n        });\n      })\n      .then(() => {\n        closeAllPopups();\n        setValueInput({\n          ...valueInput,\n          submit: 'Сохранить',\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  //  Обновить данные пользователя\n  function handleUpdateUser({ name, about }) {\n    setValueInput({\n      ...valueInput,\n      submit: 'Сохранение...',\n    });\n    api\n      .setUserInfo(name, about)\n      .then(() => {\n        setCurrentUser({\n          ...currentUser,\n          name: name,\n          about: about,\n        });\n      })\n      .then(() => {\n        closeAllPopups();\n        setValueInput({\n          ...valueInput,\n          submit: 'Сохранить',\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //  Присвоить значения карточке\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  //  Открыть попап редактирования профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  //  Открыть попап добавдения новой карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  //  Открыть попап редактирования аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n    setNameValid(true);\n  }\n  //  Открыть попап подтверждения удаления карточки\n  function handleDeleteButtonClick(card) {\n    setIsConfirmPopupOpen(true);\n    setDeleteCard(card);\n    setNameValid(true);\n    setDescriptionValid(true);\n  }\n  //  Закрыть все попапы\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n    setIsConfirmPopupOpen(false);\n    setNameValid(false);\n    setDescriptionValid(false);\n  }\n\n  function handleRegister(email, password) {\n    return auth.register(email, password);\n  }\n\n  function handleLogin(email, password) {\n    return auth.login(email, password).then((res) => {\n      localStorage.setItem('jwt', res.token);\n    });\n  }\n\n  function handleSignout() {\n    localStorage.clear();\n    setLoggedIn(false);\n    setCurrentUser({_id: null, avatar: ''})\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        <Header loggedIn={loggedIn} email={currentUser.email} onSignOut={handleSignout} />\n        <MainRoute isChecked={isChecked}>\n          <Switch>\n            <Route path=\"/sign-in\">\n              <Login onLogin={handleLogin} loggedIn={loggedIn} checkToken={checkToken} />\n            </Route>\n            <Route path=\"/sign-up\">\n              <Register onRegister={handleRegister} loggedIn={loggedIn} />\n            </Route>\n            \n              <ProtectedRoute\n                loggedIn={loggedIn}\n                path=\"/\"\n                component={Main}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardLike={handleCardLike}\n                onConfirmDelete={handleDeleteButtonClick}\n                handleChangeName={handleChangeName}\n              />\n\n          </Switch>\n        </MainRoute>\n        <Footer />\n        <ConfirmPopup\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onCardDelete={handleCardDelete}\n          card={deleteCard}\n          valueInput={valueInput.confirm}\n          formValid={formValid}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          valueInput={valueInput.submit}\n          nameError={nameError}\n          descriptionError={descriptionError}\n          handleChangeName={handleChangeName}\n          handleChangeDescription={handleChangeDescription}\n          formValid={formValid}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          valueInput={valueInput.submit}\n          descriptionError={descriptionError}\n          handleChangeDescription={handleChangeDescription}\n          formValid={formValid}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          valueInput={valueInput.submit}\n          nameError={nameError}\n          descriptionError={descriptionError}\n          handleChangeName={handleChangeName}\n          handleChangeDescription={handleChangeDescription}\n          formValid={formValid}\n        />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/ImagePopup.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Footer.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Header.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Main.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/AddPlacePopup.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/ConfirmPopup.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/EditProfilePopup.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Register.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/ProtectedRoute.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Login.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/MainRoute.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/contexts/CurrentUserContext.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/utils/auth.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/utils/api.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/PopupWithForm.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Card.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/InfoTooltip.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Popup.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":25,"nodeType":"101","messageId":"102","endLine":2,"endColumn":35},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]