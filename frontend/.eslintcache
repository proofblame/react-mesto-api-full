[{"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/index.js":"1","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/reportWebVitals.js":"2","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/App.js":"3","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Header.js":"4","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Footer.js":"5","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/ImagePopup.js":"6","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Main.js":"7","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/EditProfilePopup.js":"8","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/ConfirmPopup.js":"9","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js":"10","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Register.js":"11","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Login.js":"12","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/AddPlacePopup.js":"13","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/ProtectedRoute.js":"14","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/MainRoute.js":"15","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/contexts/CurrentUserContext.js":"16","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/utils/auth.js":"17","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/utils/api.js":"18","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Card.js":"19","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/PopupWithForm.js":"20","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/InfoTooltip.js":"21","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Popup.js":"22"},{"size":615,"mtime":1617109626843,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1617109626843,"results":"25","hashOfConfig":"24"},{"size":12045,"mtime":1617208079816,"results":"26","hashOfConfig":"24"},{"size":1500,"mtime":1617109626830,"results":"27","hashOfConfig":"24"},{"size":214,"mtime":1617109626829,"results":"28","hashOfConfig":"24"},{"size":774,"mtime":1617109626830,"results":"29","hashOfConfig":"24"},{"size":2322,"mtime":1617109626831,"results":"30","hashOfConfig":"24"},{"size":2600,"mtime":1617109626829,"results":"31","hashOfConfig":"24"},{"size":574,"mtime":1617109626828,"results":"32","hashOfConfig":"24"},{"size":1418,"mtime":1617109626829,"results":"33","hashOfConfig":"24"},{"size":3056,"mtime":1617109626832,"results":"34","hashOfConfig":"24"},{"size":2630,"mtime":1617109626831,"results":"35","hashOfConfig":"24"},{"size":2367,"mtime":1617109626827,"results":"36","hashOfConfig":"24"},{"size":434,"mtime":1617109626832,"results":"37","hashOfConfig":"24"},{"size":268,"mtime":1617109626831,"results":"38","hashOfConfig":"24"},{"size":85,"mtime":1617109626833,"results":"39","hashOfConfig":"24"},{"size":1351,"mtime":1617210005358,"results":"40","hashOfConfig":"24"},{"size":3321,"mtime":1617210001210,"results":"41","hashOfConfig":"24"},{"size":2030,"mtime":1617109626828,"results":"42","hashOfConfig":"24"},{"size":1498,"mtime":1617109626832,"results":"43","hashOfConfig":"24"},{"size":536,"mtime":1617109626830,"results":"44","hashOfConfig":"24"},{"size":1160,"mtime":1617109626832,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"13efi2c",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/index.js",[],["93","94"],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/reportWebVitals.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/App.js",["95"],"import React, {useState, useEffect} from 'react';\nimport {Route, Switch, useHistory} from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport ConfirmPopup from './ConfirmPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport MainRoute from './MainRoute';\nimport auth from '../utils/auth';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(false);\n  const [deleteCard, setDeleteCard] = useState(false);\n  const [currentUser, setCurrentUser] = useState({_id: null, avatar: ''});\n  const [cards, setCards] = useState([]);\n  const [valueInput, setValueInput] = useState({\n    submit: 'Сохранить',\n    confirm: 'Да',\n  });\n\n  const [nameError, setNameError] = useState('');\n  const [descriptionError, setDescriptionError] = useState('');\n  const [formValid, setFormValid] = useState(false);\n  const [nameValid, setNameValid] = useState(false);\n  const [descriptionValid, setDescriptionValid] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isChecked, setIsChecked] = useState(false);\n  const history = useHistory();\n\n  // Получение данных о пользователе и карточках после логина\n  useEffect(() => {\n    checkToken();\n  }, []);\n\n  function checkToken() {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      api\n        .getUserInfo(jwt)\n        .then(user => {\n          setLoggedIn(true);\n          history.push('/');\n          setCurrentUser(user.data);\n        })\n        .catch(e => console.error(e.message));\n      api\n        .getInitialCards(jwt)\n        .then(cards => {\n          setCards(cards);\n        })\n        .catch(err => {\n          console.log(err);\n        })\n        .finally(() => {\n          setIsChecked(true);\n        });\n    } else {\n      setIsChecked(true);\n    }\n  }\n\n  // Валидация изменения имени и названия\n  function handleChangeName(event) {\n    if (event.target.validity.valid) {\n      setNameError('');\n      setNameValid(true);\n    } else {\n      setNameError(event.target.validationMessage);\n      setNameValid(false);\n    }\n  }\n\n  // Валидация изменения описания профиля\n  function handleChangeDescription(event) {\n    if (event.target.validity.valid) {\n      setDescriptionError('');\n      setDescriptionValid(true);\n    } else {\n      setDescriptionError(event.target.validationMessage);\n      setDescriptionValid(false);\n    }\n  }\n\n  // Валидация изменения ссылок\n  function handleChangeLinks(event) {\n    const checkexp = /(http)?s?:?(\\/\\/[^\"']*\\.(?:png|jpg|jpeg|gif|png|svg))/gi.test(\n      event.target.value\n    );\n    if (event.target.validity.valid && checkexp) {\n      setDescriptionError('');\n      setDescriptionValid(true);\n    } else {\n      setDescriptionError(event.target.validationMessage || 'Некорректная ссылка');\n      setDescriptionValid(false);\n    }\n  }\n  // Изначальная валидация формы\n  useEffect(() => {\n    if (!nameValid || !descriptionValid) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n    return () => {\n      setFormValid(false);\n    };\n  }, [nameValid, descriptionValid]);\n\n  //  Закрытие попапа по Esc и клику на оверлей\n  useEffect(() => {\n    function handleEscClose(event) {\n      if (event.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n\n    function handleClickOnOverlay(event) {\n      const popup = document.querySelector('.popup_opened');\n      if (event.target !== popup) {\n        return;\n      }\n      closeAllPopups();\n    }\n\n    document.addEventListener('click', handleClickOnOverlay);\n    document.addEventListener('keydown', handleEscClose);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n      document.removeEventListener('click', handleClickOnOverlay);\n    };\n  }, []);\n\n  //  Поставить/снять лайк\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i === currentUser._id);\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      api\n        .changeLikeCardStatus(card._id, !isLiked, jwt)\n        .then(newCard => {\n          const newCards = cards.map(c => (c._id === card._id ? newCard : c));\n          setCards(newCards);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n\n  //  Удалить карточку\n  function handleCardDelete(card) {\n    setValueInput({\n      ...valueInput,\n      confirm: 'Удаление...',\n    });\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      api\n        .deleteCard(card._id, jwt)\n        .then(() => {\n          const newCards = cards.filter(c => c._id !== card._id);\n          setCards(newCards);\n        })\n        .then(() => {\n          closeAllPopups();\n          setValueInput({\n            ...valueInput,\n            confirm: 'Да',\n          });\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n\n  //  Добавить карточку\n  function handleAddPlaceSubmit({name, link}) {\n    setValueInput({\n      ...valueInput,\n      submit: 'Сохранение...',\n    });\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      api\n        .addNewCard(name, link, jwt)\n        .then(card => {\n          setCards([card.data, ...cards]);\n        })\n        .then(() => {\n          setValueInput({\n            ...valueInput,\n            submit: 'Сохранить',\n          });\n          closeAllPopups();\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n  //  Обновить аватар\n  function handleUpdateAvatar({avatar}) {\n    setValueInput({\n      ...valueInput,\n      submit: 'Сохранение...',\n    });\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      api\n        .setUserAvatar(avatar, jwt)\n        .then(() => {\n          setCurrentUser({\n            ...currentUser,\n            avatar: avatar,\n          });\n        })\n        .then(() => {\n          closeAllPopups();\n          setValueInput({\n            ...valueInput,\n            submit: 'Сохранить',\n          });\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n  //  Обновить данные пользователя\n  function handleUpdateUser({name, about}) {\n    setValueInput({\n      ...valueInput,\n      submit: 'Сохранение...',\n    });\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      api\n        .setUserInfo(name, about, jwt)\n        .then(() => {\n          setCurrentUser({\n            ...currentUser,\n            name: name,\n            about: about,\n          });\n        })\n        .then(() => {\n          closeAllPopups();\n          setValueInput({\n            ...valueInput,\n            submit: 'Сохранить',\n          });\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n\n  //  Присвоить значения карточке\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  //  Открыть попап редактирования профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n    setNameValid(true);\n    setDescriptionValid(true);\n  }\n  //  Открыть попап добавдения новой карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    setNameValid(false);\n    setDescriptionValid(false);\n  }\n  //  Открыть попап редактирования аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n    setNameValid(true);\n    setDescriptionValid(false);\n  }\n  //  Открыть попап подтверждения удаления карточки\n  function handleDeleteButtonClick(card) {\n    setIsConfirmPopupOpen(true);\n    setDeleteCard(card);\n    setNameValid(true);\n    setDescriptionValid(true);\n  }\n  //  Закрыть все попапы\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n    setIsConfirmPopupOpen(false);\n    setDescriptionError('');\n    setNameError('');\n  }\n\n  function handleRegister(email, password) {\n    return auth.register(email, password);\n  }\n\n  function handleLogin(email, password) {\n    return auth.login(email, password).then(res => {\n      localStorage.setItem('jwt', res.jwt);\n    });\n  }\n\n  function handleSignout() {\n    setLoggedIn(false);\n    setCurrentUser({_id: null, avatar: ''});\n    localStorage.removeItem('jwt');\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        <Header loggedIn={loggedIn} email={currentUser.email} onSignOut={handleSignout} />\n        <MainRoute isChecked={isChecked}>\n          <Switch>\n            <ProtectedRoute\n              loggedIn={loggedIn}\n              exact\n              path=\"/\"\n              component={Main}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onConfirmDelete={handleDeleteButtonClick}\n              handleChangeName={handleChangeName}\n            />\n\n            <Route path=\"/sign-up\">\n              <Register onRegister={handleRegister} loggedIn={loggedIn} />\n            </Route>\n            <Route path=\"/sign-in\">\n              <Login onLogin={handleLogin} loggedIn={loggedIn} checkToken={checkToken} />\n            </Route>\n          </Switch>\n        </MainRoute>\n        <Footer />\n        <ConfirmPopup\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onCardDelete={handleCardDelete}\n          card={deleteCard}\n          valueInput={valueInput.confirm}\n          formValid={formValid}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          valueInput={valueInput.submit}\n          nameError={nameError}\n          descriptionError={descriptionError}\n          handleChangeName={handleChangeName}\n          handleChangeLinks={handleChangeLinks}\n          formValid={formValid}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          valueInput={valueInput.submit}\n          descriptionError={descriptionError}\n          handleChangeLinks={handleChangeLinks}\n          formValid={formValid}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          valueInput={valueInput.submit}\n          nameError={nameError}\n          descriptionError={descriptionError}\n          handleChangeName={handleChangeName}\n          handleChangeDescription={handleChangeDescription}\n          formValid={formValid}\n        />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Header.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Footer.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/ImagePopup.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Main.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/EditProfilePopup.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/ConfirmPopup.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Register.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Login.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/AddPlacePopup.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/ProtectedRoute.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/MainRoute.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/contexts/CurrentUserContext.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/utils/auth.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/utils/api.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Card.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/PopupWithForm.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/InfoTooltip.js",[],"/Users/timurmarokko/Desktop/dev/react-mesto-api-full/frontend/src/components/Popup.js",[],["96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":45,"column":6,"nodeType":"104","endLine":45,"endColumn":8,"suggestions":"105"},{"ruleId":"98","replacedBy":"106"},{"ruleId":"100","replacedBy":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkToken'. Either include it or remove the dependency array.","ArrayExpression",["110"],["108"],["109"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [checkToken]",{"range":"113","text":"114"},[1885,1887],"[checkToken]"]