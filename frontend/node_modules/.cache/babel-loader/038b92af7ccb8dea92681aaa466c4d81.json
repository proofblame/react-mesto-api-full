{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timurmarokko/Desktop/dev/mesto-react/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useContext, useRef } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({\n  isOpen,\n  onClose,\n  onUpdateAvatar,\n  valueInput,\n  descriptionError,\n  handleChangeDescription\n}) {\n  _s();\n\n  const avatarRef = useRef();\n  const currentUser = useContext(CurrentUserContext);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  }\n\n  useEffect(() => {\n    avatarRef.current.value = currentUser.avatar;\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"popup-update-avatar\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    value: valueInput,\n    isOpen: isOpen,\n    onClose: onClose,\n    handleSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"link\",\n      type: \"url\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      className: \"popup__input popup__input_link\",\n      required: true,\n      id: \"link\",\n      autoComplete: \"off\",\n      ref: avatarRef,\n      onChange: event => {\n        handleChangeDescription(event);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      id: \"link-error\",\n      children: descriptionError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditAvatarPopup, \"T0YzHXOmq86gXtraFjrtd/p9wr4=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/timurmarokko/Desktop/dev/mesto-react/src/components/EditAvatarPopup.js"],"names":["useEffect","useContext","useRef","CurrentUserContext","PopupWithForm","EditAvatarPopup","isOpen","onClose","onUpdateAvatar","valueInput","descriptionError","handleChangeDescription","avatarRef","currentUser","handleSubmit","event","preventDefault","avatar","current","value"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,QAA8C,OAA9C;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,eAAT,CAAyB;AACrBC,EAAAA,MADqB;AAErBC,EAAAA,OAFqB;AAGrBC,EAAAA,cAHqB;AAIrBC,EAAAA,UAJqB;AAKrBC,EAAAA,gBALqB;AAMrBC,EAAAA;AANqB,CAAzB,EAOG;AAAA;;AACC,QAAMC,SAAS,GAAGV,MAAM,EAAxB;AACA,QAAMW,WAAW,GAAGZ,UAAU,CAACE,kBAAD,CAA9B;;AAEA,WAASW,YAAT,CAAsBC,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AAEAR,IAAAA,cAAc,CAAC;AACXS,MAAAA,MAAM,EAAEL,SAAS,CAACM,OAAV,CAAkBC;AADf,KAAD,CAAd;AAGH;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS,CAACM,OAAV,CAAkBC,KAAlB,GAA0BN,WAAW,CAACI,MAAtC;AACH,GAFQ,EAEN,CAACJ,WAAD,CAFM,CAAT;AAIA,sBACI,QAAC,aAAD;AACI,IAAA,IAAI,EAAC,qBADT;AAEI,IAAA,KAAK,EAAC,uFAFV;AAGI,IAAA,KAAK,EAAEJ,UAHX;AAII,IAAA,MAAM,EAAEH,MAJZ;AAKI,IAAA,OAAO,EAAEC,OALb;AAMI,IAAA,YAAY,EAAEO,YANlB;AAAA,4BAQI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,KAFT;AAGI,MAAA,WAAW,EAAC,oGAHhB;AAII,MAAA,SAAS,EACT,gCALJ;AAMI,MAAA,QAAQ,MANZ;AAOI,MAAA,EAAE,EAAC,MAPP;AAQI,MAAA,YAAY,EAAC,KARjB;AASI,MAAA,GAAG,EAAEF,SATT;AAUI,MAAA,QAAQ,EAAGG,KAAD,IAAW;AACjBJ,QAAAA,uBAAuB,CAACI,KAAD,CAAvB;AACH;AAZL;AAAA;AAAA;AAAA;AAAA,YARJ,eAsBI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAwB,MAAA,EAAE,EAAC,YAA3B;AAAA,gBAAyCL;AAAzC;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAjDQL,e;;KAAAA,e;AAmDT,eAAeA,eAAf","sourcesContent":["import { useEffect, useContext, useRef } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({\n    isOpen,\n    onClose,\n    onUpdateAvatar,\n    valueInput,\n    descriptionError,\n    handleChangeDescription,\n}) {\n    const avatarRef = useRef();\n    const currentUser = useContext(CurrentUserContext);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        onUpdateAvatar({\n            avatar: avatarRef.current.value,\n        });\n    }\n\n    useEffect(() => {\n        avatarRef.current.value = currentUser.avatar;\n    }, [currentUser]);\n\n    return (\n        <PopupWithForm\n            name=\"popup-update-avatar\"\n            title=\"Обновить аватар\"\n            value={valueInput}\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}\n        >\n            <input\n                name=\"link\"\n                type=\"url\"\n                placeholder=\"Ссылка на картинку\"\n                className=\n                \"popup__input popup__input_link\"\n                required\n                id=\"link\"\n                autoComplete=\"off\"\n                ref={avatarRef}\n                onChange={(event) => {\n                    handleChangeDescription(event);\n                }}\n            />\n            <span className=\"error\" id=\"link-error\">{descriptionError}</span>\n        </PopupWithForm>\n    );\n}\n\nexport default EditAvatarPopup;\n"]},"metadata":{},"sourceType":"module"}