{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/timurmarokko/Desktop/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import{useHistory}from\"react-router-dom\";import InfoToolTip from\"./InfoTooltip\";function Login(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),popupMessage=_useState6[0],setPopupMessage=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isLoginPopup=_useState8[0],setIsLoginPopup=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),submitStatus=_useState10[0],setSubmitStatus=_useState10[1];var history=useHistory();useEffect(function(){if(props.loggedIn)history.push(\"/\");},[props.loggedIn,history]);function onChangeEmail(e){setEmail(e.target.value);}function onChangePassword(e){setPassword(e.target.value);}function onClose(){setIsLoginPopup(false);if(submitStatus){props.checkToken();}}function onSubmit(e){e.preventDefault();props.onLogin(email,password).then(function(){setSubmitStatus(true);setPopupMessage(\"Вы успешно вошли!\");}).catch(function(e){console.error(e.message);switch(e.message){case\"Incorrect email address or password\":setPopupMessage(\"Некорректный email или пароль\");break;case'Поле \"password\" должно быть заполнено':setPopupMessage('Поле \"Пароль\" должны быть заполенено');break;default:setPopupMessage(\"Что-то пошло не так! Попробуйте ещё раз.\");}}).finally(function(){setIsLoginPopup(true);});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{className:\"register\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h1\",{className:\"register__title\",children:\"\\u0412\\u0445\\u043E\\u0434\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"register__email\",placeholder:\"Email\",value:data.email,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"register__password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:data.password,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{className:\"register__submit\",children:\"\\u0412\\u043E\\u0439\\u0442\\u0438\"})]}),/*#__PURE__*/_jsx(InfoToolTip,{isOpen:isLoginPopup,onClose:onClose,name:\"login\",status:submitStatus,children:popupMessage})]});}export default Login;","map":{"version":3,"sources":["/Users/timurmarokko/Desktop/dev/react-mesto-auth/src/components/Login.js"],"names":["useState","useEffect","useHistory","InfoToolTip","Login","props","email","setEmail","password","setPassword","popupMessage","setPopupMessage","isLoginPopup","setIsLoginPopup","submitStatus","setSubmitStatus","history","loggedIn","push","onChangeEmail","e","target","value","onChangePassword","onClose","checkToken","onSubmit","preventDefault","onLogin","then","catch","console","error","message","finally","handleSubmit","data","handleChange"],"mappings":"oTAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,eACQL,QAAQ,CAAC,EAAD,CADhB,wCACXM,KADW,eACJC,QADI,8BAEcP,QAAQ,CAAC,EAAD,CAFtB,yCAEXQ,QAFW,eAEDC,WAFC,8BAGsBT,QAAQ,CAAC,EAAD,CAH9B,yCAGXU,YAHW,eAGGC,eAHH,8BAIsBX,QAAQ,CAAC,KAAD,CAJ9B,yCAIXY,YAJW,eAIGC,eAJH,8BAKsBb,QAAQ,CAAC,KAAD,CAL9B,0CAKXc,YALW,gBAKGC,eALH,gBAMlB,GAAMC,CAAAA,OAAO,CAAGd,UAAU,EAA1B,CAEAD,SAAS,CAAC,UAAM,CACZ,GAAII,KAAK,CAACY,QAAV,CAAoBD,OAAO,CAACE,IAAR,CAAa,GAAb,EACvB,CAFQ,CAEN,CAACb,KAAK,CAACY,QAAP,CAAiBD,OAAjB,CAFM,CAAT,CAIA,QAASG,CAAAA,aAAT,CAAuBC,CAAvB,CAA0B,CACtBb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CACH,CAED,QAASC,CAAAA,gBAAT,CAA0BH,CAA1B,CAA6B,CACzBX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CACH,CAED,QAASE,CAAAA,OAAT,EAAmB,CACfX,eAAe,CAAC,KAAD,CAAf,CACA,GAAIC,YAAJ,CAAkB,CACdT,KAAK,CAACoB,UAAN,GACH,CACJ,CAED,QAASC,CAAAA,QAAT,CAAkBN,CAAlB,CAAqB,CACjBA,CAAC,CAACO,cAAF,GACAtB,KAAK,CACAuB,OADL,CACatB,KADb,CACoBE,QADpB,EAEKqB,IAFL,CAEU,UAAM,CACRd,eAAe,CAAC,IAAD,CAAf,CACAJ,eAAe,CAAC,mBAAD,CAAf,CACH,CALL,EAMKmB,KANL,CAMW,SAACV,CAAD,CAAO,CACVW,OAAO,CAACC,KAAR,CAAcZ,CAAC,CAACa,OAAhB,EACA,OAAQb,CAAC,CAACa,OAAV,EACI,IAAK,qCAAL,CACItB,eAAe,CAAC,+BAAD,CAAf,CACA,MACJ,IAAK,uCAAL,CACIA,eAAe,CAAC,sCAAD,CAAf,CACA,MACJ,QACIA,eAAe,CACX,0CADW,CAAf,CARR,CAYH,CApBL,EAqBKuB,OArBL,CAqBa,UAAM,CACXrB,eAAe,CAAC,IAAD,CAAf,CACH,CAvBL,EAwBH,CAED,mBACI,wCACI,cAAM,SAAS,CAAC,UAAhB,CAA2B,QAAQ,CAAEsB,YAArC,wBACI,WAAI,SAAS,CAAC,iBAAd,sCADJ,cAEI,cACI,IAAI,CAAC,OADT,CAEI,SAAS,CAAC,iBAFd,CAGI,WAAW,CAAC,OAHhB,CAII,KAAK,CAAEC,IAAI,CAAC9B,KAJhB,CAKI,QAAQ,CAAE+B,YALd,EAFJ,cASI,cACI,IAAI,CAAC,UADT,CAEI,SAAS,CAAC,oBAFd,CAGI,WAAW,CAAC,sCAHhB,CAII,KAAK,CAAED,IAAI,CAAC5B,QAJhB,CAKI,QAAQ,CAAE6B,YALd,EATJ,cAgBI,eAAQ,SAAS,CAAC,kBAAlB,4CAhBJ,GADJ,cAmBI,KAAC,WAAD,EACI,MAAM,CAAEzB,YADZ,CAEI,OAAO,CAAEY,OAFb,CAGI,IAAI,CAAC,OAHT,CAII,MAAM,CAAEV,YAJZ,UAMKJ,YANL,EAnBJ,GADJ,CA8BH,CAED,cAAeN,CAAAA,KAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport InfoToolTip from \"./InfoTooltip\";\n\nfunction Login(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [popupMessage, setPopupMessage] = useState(\"\");\n    const [isLoginPopup, setIsLoginPopup] = useState(false);\n    const [submitStatus, setSubmitStatus] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (props.loggedIn) history.push(\"/\");\n    }, [props.loggedIn, history]);\n\n    function onChangeEmail(e) {\n        setEmail(e.target.value);\n    }\n\n    function onChangePassword(e) {\n        setPassword(e.target.value);\n    }\n\n    function onClose() {\n        setIsLoginPopup(false);\n        if (submitStatus) {\n            props.checkToken();\n        }\n    }\n\n    function onSubmit(e) {\n        e.preventDefault();\n        props\n            .onLogin(email, password)\n            .then(() => {\n                setSubmitStatus(true);\n                setPopupMessage(\"Вы успешно вошли!\");\n            })\n            .catch((e) => {\n                console.error(e.message);\n                switch (e.message) {\n                    case \"Incorrect email address or password\":\n                        setPopupMessage(\"Некорректный email или пароль\");\n                        break;\n                    case 'Поле \"password\" должно быть заполнено':\n                        setPopupMessage('Поле \"Пароль\" должны быть заполенено');\n                        break;\n                    default:\n                        setPopupMessage(\n                            \"Что-то пошло не так! Попробуйте ещё раз.\"\n                        );\n                }\n            })\n            .finally(() => {\n                setIsLoginPopup(true);\n            });\n    }\n\n    return (\n        <>\n            <form className=\"register\" onSubmit={handleSubmit}>\n                <h1 className=\"register__title\">Вход</h1>\n                <input\n                    type=\"email\"\n                    className=\"register__email\"\n                    placeholder=\"Email\"\n                    value={data.email}\n                    onChange={handleChange}\n                />\n                <input\n                    type=\"password\"\n                    className=\"register__password\"\n                    placeholder=\"Пароль\"\n                    value={data.password}\n                    onChange={handleChange}\n                />\n                <button className=\"register__submit\">Войти</button>\n            </form>\n            <InfoToolTip\n                isOpen={isLoginPopup}\n                onClose={onClose}\n                name=\"login\"\n                status={submitStatus}\n            >\n                {popupMessage}\n            </InfoToolTip>\n        </>\n    );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}