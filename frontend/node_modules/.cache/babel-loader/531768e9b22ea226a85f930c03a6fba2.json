{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/timurmarokko/Desktop/dev/mesto-react/src/components/PopupWithForm.js\";\nimport { useState } from \"react\";\nimport Form from \"./Form\";\nconst [nameError, setNameError] = useState(\"\");\nconst [descriptionError, setDescriptionError] = useState(\"\");\n\nfunction handleChangeName(event) {\n  setName(event.target.value);\n\n  if (event.target.checkValidity()) {\n    setNameError('');\n  } else {\n    setNameError(event.target.validationMessage);\n  }\n}\n\nfunction handleChangeDescription(event) {\n  setDescription(event.target.value);\n\n  if (event.target.checkValidity()) {\n    setDescriptionError('');\n  } else {\n    setDescriptionError(event.target.validationMessage);\n  }\n}\n\nfunction PopupWithForm({\n  name,\n  title,\n  value,\n  isOpen,\n  onClose,\n  handleSubmit,\n  children\n}) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `popup section__popup popup_type_${name} ${isOpen ? \"popup_opened\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: name,\n        title: title,\n        value: value,\n        onClose: onClose,\n        handleSubmit: handleSubmit,\n        children: children,\n        nameError: nameError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PopupWithForm;\nexport default PopupWithForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"sources":["/Users/timurmarokko/Desktop/dev/mesto-react/src/components/PopupWithForm.js"],"names":["useState","Form","nameError","setNameError","descriptionError","setDescriptionError","handleChangeName","event","setName","target","value","checkValidity","validationMessage","handleChangeDescription","setDescription","PopupWithForm","name","title","isOpen","onClose","handleSubmit","children"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,EAAD,CAAxD;;AAEA,SAASM,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7BC,EAAAA,OAAO,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAP;;AACA,MAAIH,KAAK,CAACE,MAAN,CAAaE,aAAb,EAAJ,EAAkC;AAC9BR,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAFD,MAEO;AACHA,IAAAA,YAAY,CAACI,KAAK,CAACE,MAAN,CAAaG,iBAAd,CAAZ;AACH;AACJ;;AAED,SAASC,uBAAT,CAAiCN,KAAjC,EAAwC;AACpCO,EAAAA,cAAc,CAACP,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAd;;AACA,MAAIH,KAAK,CAACE,MAAN,CAAaE,aAAb,EAAJ,EAAkC;AAC9BN,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACH,GAFD,MAEO;AACHA,IAAAA,mBAAmB,CAACE,KAAK,CAACE,MAAN,CAAaG,iBAAd,CAAnB;AACH;AACJ;;AAGD,SAASG,aAAT,CAAuB;AACnBC,EAAAA,IADmB;AAEnBC,EAAAA,KAFmB;AAGnBP,EAAAA,KAHmB;AAInBQ,EAAAA,MAJmB;AAKnBC,EAAAA,OALmB;AAMnBC,EAAAA,YANmB;AAOnBC,EAAAA;AAPmB,CAAvB,EAQG;AACC,sBACI;AACI,IAAA,SAAS,EAAG,mCAAkCL,IAAK,IAC/CE,MAAM,GAAG,cAAH,GAAoB,EAC7B,EAHL;AAAA,2BAKI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,IAAI,EAAEF,IADV;AAEI,QAAA,KAAK,EAAEC,KAFX;AAGI,QAAA,KAAK,EAAEP,KAHX;AAII,QAAA,OAAO,EAAES,OAJb;AAKI,QAAA,YAAY,EAAEC,YALlB;AAMI,QAAA,QAAQ,EAAEC,QANd;AAOI,QAAA,SAAS,EAAEnB;AAPf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;KA5BQa,a;AA8BT,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\";\nimport Form from \"./Form\";\n\nconst [nameError, setNameError] = useState(\"\");\nconst [descriptionError, setDescriptionError] = useState(\"\");\n\nfunction handleChangeName(event) {\n    setName(event.target.value);\n    if (event.target.checkValidity()) {\n        setNameError('');\n    } else {\n        setNameError(event.target.validationMessage);\n    }\n}\n\nfunction handleChangeDescription(event) {\n    setDescription(event.target.value);\n    if (event.target.checkValidity()) {\n        setDescriptionError('');\n    } else {\n        setDescriptionError(event.target.validationMessage);\n    }\n}\n\n\nfunction PopupWithForm({\n    name,\n    title,\n    value,\n    isOpen,\n    onClose,\n    handleSubmit,\n    children,\n}) {\n    return (\n        <section\n            className={`popup section__popup popup_type_${name} ${\n                isOpen ? \"popup_opened\" : \"\"\n            }`}\n        >\n            <div className=\"popup__container\">\n                <Form\n                    name={name}\n                    title={title}\n                    value={value}\n                    onClose={onClose}\n                    handleSubmit={handleSubmit}\n                    children={children}\n                    nameError={nameError}\n                />\n            </div>\n        </section>\n    );\n}\n\nexport default PopupWithForm;\n"]},"metadata":{},"sourceType":"module"}