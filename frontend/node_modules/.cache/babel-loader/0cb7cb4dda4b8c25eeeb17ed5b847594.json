{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timurmarokko/Desktop/dev/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser,\n  valueInput,\n  nameError,\n  descriptionError,\n  handleChangeName,\n  handleChangeDescription\n}) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const currentUser = useContext(CurrentUserContext);\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"popup-edit-profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    value: valueInput,\n    isOpen: isOpen,\n    onClose: onClose,\n    handleSubmit: handleSubmit,\n    event: event.target,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      value: name || \"\",\n      onChange: event => {\n        handleChangeName(event);\n        setName(event.target.value);\n      },\n      className: `popup__input popup__input_name ${nameError ? \"popup__input_state_invalid\" : \"\"}`,\n      id: \"user-name\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      required: true,\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"user-name-error\",\n      className: \"error\",\n      children: nameError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"job\",\n      type: \"text\",\n      value: description || \"\",\n      onChange: event => {\n        handleChangeDescription(event);\n        setDescription(event.target.value);\n      },\n      className: `popup__input popup__input_job ${descriptionError ? \"popup__input_state_invalid\" : \"\"}`,\n      id: \"about\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      required: true,\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"about-error\",\n      className: \"error\",\n      children: descriptionError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"2NM8e/hg17akz+vK4kFYdGbn3Sg=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/timurmarokko/Desktop/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["useState","useContext","useEffect","CurrentUserContext","PopupWithForm","EditProfilePopup","isOpen","onClose","onUpdateUser","valueInput","nameError","descriptionError","handleChangeName","handleChangeDescription","name","setName","description","setDescription","currentUser","about","handleSubmit","event","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditProfilePopup({\n    isOpen,\n    onClose,\n    onUpdateUser,\n    valueInput,\n    nameError,\n    descriptionError,\n    handleChangeName,\n    handleChangeDescription,\n}) {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const currentUser = useContext(CurrentUserContext);\n\n    useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        onUpdateUser({\n            name,\n            about: description,\n        });\n    }\n\n    return (\n        <PopupWithForm\n            name=\"popup-edit-profile\"\n            title=\"Редактировать профиль\"\n            value={valueInput}\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}\n            event={event.target}\n        >\n            <input\n                name=\"name\"\n                type=\"text\"\n                value={name || \"\"}\n                onChange={(event) => {\n                    handleChangeName(event);\n                    setName(event.target.value);\n                }}\n                className={`popup__input popup__input_name ${\n                    nameError ? \"popup__input_state_invalid\" : \"\"\n                }`}\n                id=\"user-name\"\n                minLength=\"2\"\n                maxLength=\"40\"\n                required\n                autoComplete=\"off\"\n            />\n            <span id=\"user-name-error\" className=\"error\">\n                {nameError}\n            </span>\n\n            <input\n                name=\"job\"\n                type=\"text\"\n                value={description || \"\"}\n                onChange={(event) => {\n                    handleChangeDescription(event);\n                    setDescription(event.target.value);\n                }}\n                className={`popup__input popup__input_job ${\n                    descriptionError ? \"popup__input_state_invalid\" : \"\"\n                }`}\n                id=\"about\"\n                minLength=\"2\"\n                maxLength=\"200\"\n                required\n                autoComplete=\"off\"\n            />\n            <span id=\"about-error\" className=\"error\">\n                {descriptionError}\n            </span>\n        </PopupWithForm>\n    );\n}\n\nexport default EditProfilePopup;\n"]},"metadata":{},"sourceType":"module"}