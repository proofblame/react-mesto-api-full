{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timurmarokko/Desktop/dev/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser,\n  valueInput\n}) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const currentUser = useContext(CurrentUserContext);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  function handleChangeName(event) {\n    setName(event.target.value);\n    handleCheckValidity(event);\n  }\n\n  function handleChangeDescription(event) {\n    setDescription(event.target.value);\n    handleCheckValidity(event);\n  }\n\n  us;\n\n  function handleCheckValidity(event) {\n    if (event.target.checkValidity()) {\n      setError('');\n    } else {\n      setError(event.target.validationMessage);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"popup-edit-profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    value: valueInput,\n    isOpen: isOpen,\n    onClose: onClose,\n    handleSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      value: name || \"\",\n      onChange: handleChangeName,\n      className: \"popup__input popup__input_name\",\n      id: \"user-name\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      required: true,\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"user-name-error\",\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"job\",\n      type: \"text\",\n      value: description || \"\",\n      onChange: handleChangeDescription,\n      className: \"popup__input popup__input_job\",\n      id: \"about\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      required: true,\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"about-error\",\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"f9hcMHvJ7gFmpsgKu2qhl9g5YUI=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/timurmarokko/Desktop/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["useState","useContext","useEffect","CurrentUserContext","PopupWithForm","EditProfilePopup","isOpen","onClose","onUpdateUser","valueInput","name","setName","description","setDescription","currentUser","error","setError","about","handleSubmit","event","preventDefault","handleChangeName","target","value","handleCheckValidity","handleChangeDescription","us","checkValidity","validationMessage"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, valueInput }) {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const currentUser = useContext(CurrentUserContext);\n    const [error, setError] = useState(\"\");\n\n    useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        onUpdateUser({\n            name,\n            about: description,\n        });\n    }\n\n    function handleChangeName(event) {\n        setName(event.target.value);\n        handleCheckValidity(event);\n    }\n\n    function handleChangeDescription(event) {\n        setDescription(event.target.value);\n        handleCheckValidity(event);\n    }\n\n        us\n    function handleCheckValidity(event) {\n        if (event.target.checkValidity()) {\n            setError('');\n        } else {\n            setError(event.target.validationMessage);\n        }\n    }\n\n    return (\n        <PopupWithForm\n            name=\"popup-edit-profile\"\n            title=\"Редактировать профиль\"\n            value={valueInput}\n            isOpen={isOpen}\n            onClose={onClose}\n            handleSubmit={handleSubmit}\n        >\n            <input\n                name=\"name\"\n                type=\"text\"\n                value={name || \"\"}\n                onChange={handleChangeName}\n                className=\"popup__input popup__input_name\"\n                id=\"user-name\"\n                minLength=\"2\"\n                maxLength=\"40\"\n                required\n                autoComplete=\"off\"\n            />\n            <span id=\"user-name-error\" className=\"error\">\n                {error}\n            </span>\n            <input\n                name=\"job\"\n                type=\"text\"\n                value={description || \"\"}\n                onChange={handleChangeDescription}\n                className=\"popup__input popup__input_job\"\n                id=\"about\"\n                minLength=\"2\"\n                maxLength=\"200\"\n                required\n                autoComplete=\"off\"\n            />\n            <span id=\"about-error\" className=\"error\">{error}</span>\n        </PopupWithForm>\n    );\n}\n\nexport default EditProfilePopup;\n"]},"metadata":{},"sourceType":"module"}