{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timurmarokko/Desktop/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(false);\n  const [currentUser, setCurrentUser] = useState();\n  useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data._id);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      name: card.name,\n      link: card.link\n    });\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"9u7L37f4jEBIuW0ZfBh5W+q10ME=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/timurmarokko/Desktop/dev/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","getUserInfo","then","data","_id","catch","err","console","log","handleCardClick","card","name","link","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDX,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACY,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACc,qBAAD,EAAwBC,wBAAxB,IAAoDf,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,EAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,GAAG,CAACa,WAAJ,GACKC,IADL,CACWC,IAAD,IAAU;AACZH,MAAAA,cAAc,CAACG,IAAI,CAACC,GAAN,CAAd;AACH,KAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT;;AAUA,WAASG,eAAT,CAAyBC,IAAzB,EAA+B;AAC3BZ,IAAAA,eAAe,CAAC;AACZa,MAAAA,IAAI,EAAED,IAAI,CAACC,IADC;AAEZC,MAAAA,IAAI,EAAEF,IAAI,CAACE;AAFC,KAAD,CAAf;AAIH;;AAED,WAASC,sBAAT,GAAkC;AAC9BrB,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACH;;AAED,WAASsB,mBAAT,GAA+B;AAC3BpB,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH;;AAED,WAASqB,qBAAT,GAAiC;AAC7BnB,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACH;;AAED,WAASoB,cAAT,GAA0B;AACtBxB,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAE,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAE,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH;;AAED,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAlDQR,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(false);\n    const [currentUser, setCurrentUser] = useState();\n\n    useEffect(() => {\n        api.getUserInfo()\n            .then((data) => {\n                setCurrentUser(data._id);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, [])\n\n    function handleCardClick(card) {\n        setSelectedCard({\n            name: card.name,\n            link: card.link\n        })\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard(false)\n    }\n\n    return (\n        <CurrentUserContext.Provider>\n\n\n        </CurrentUserContext.Provider>\n        \n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}