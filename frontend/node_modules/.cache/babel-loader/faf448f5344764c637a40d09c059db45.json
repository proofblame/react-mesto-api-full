{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timurmarokko/Desktop/dev/react-mesto-auth/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport InfoToolTip from \"./InfoTooltip\";\n\nconst Register = props => {\n  _s();\n\n  const [data, setData] = useState({\n    email: '',\n    password: ''\n  });\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const [isRegisterPopup, setIsRegisterPopup] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    if (props.loggedIn) history.push(\"/\");\n  }, [props.loggedIn, history]);\n\n  function onChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value\n    });\n  }\n\n  function onClose() {\n    setIsRegisterPopup(false);\n\n    if (submitStatus) {\n      history.push(\"/sign-in\");\n    }\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    props.onRegister(data.email, data.password).then(() => {\n      setSubmitStatus(true);\n      setPopupMessage(\"Вы успешно зарегистрировались!\");\n    }).catch(() => {\n      setPopupMessage(\"Что-то пошло не так! Попробуйте ещё раз.\");\n    }).finally(() => {\n      setIsRegisterPopup(true);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"register__heading\",\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"register__form\",\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        name: \"email\",\n        type: \"email\",\n        value: data.email,\n        onChange: onChange,\n        className: \"register__input\",\n        placeholder: \"Email\",\n        autocomplete: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // id=\"password\"\n        name: \"password\",\n        type: \"password\",\n        value: data.password,\n        onChange: onChange,\n        className: \"register__input\",\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        autocomplete: \"new-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"register__submit-button\",\n        children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"register__title\",\n      children: [\"\\u0423\\u0436\\u0435 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C?\", /*#__PURE__*/_jsxDEV(Link, {\n        className: \"register__link\",\n        to: \"/sign-in\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n      isOpen: isRegisterPopup,\n      onClose: onClose,\n      name: \"register\",\n      status: submitStatus,\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"YogMMidRTMQK2vB+q18UGLFmisY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/timurmarokko/Desktop/dev/react-mesto-auth/src/components/Register.js"],"names":["React","useState","useEffect","Link","useHistory","InfoToolTip","Register","props","data","setData","email","password","popupMessage","setPopupMessage","isRegisterPopup","setIsRegisterPopup","submitStatus","setSubmitStatus","history","loggedIn","push","onChange","e","name","value","target","onClose","onSubmit","preventDefault","onRegister","then","catch","finally"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport InfoToolTip from \"./InfoTooltip\";\n\nconst Register = (props) => {\n    const [ data, setData ] = useState({\n        email: '',\n        password: '',\n    })\n\n    const [popupMessage, setPopupMessage] = useState(\"\");\n    const [isRegisterPopup, setIsRegisterPopup] = useState(false);\n    const [submitStatus, setSubmitStatus] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (props.loggedIn) history.push(\"/\");\n    }, [props.loggedIn, history]);\n\n    function onChange(e) {\n        const { name, value } = e.target\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n\n    function onClose() {\n        setIsRegisterPopup(false);\n        if (submitStatus) {\n            history.push(\"/sign-in\");\n        }\n    }\n\n    function onSubmit(e) {\n        e.preventDefault();\n        props\n            .onRegister(data.email, data.password)\n            .then(() => {\n                setSubmitStatus(true);\n                setPopupMessage(\"Вы успешно зарегистрировались!\");\n            })\n            .catch(() => {\n                setPopupMessage(\"Что-то пошло не так! Попробуйте ещё раз.\");\n            })\n            .finally(() => {\n                setIsRegisterPopup(true);\n            });\n    }\n\n    return (\n        <div className=\"register\">\n            <h2 className=\"register__heading\">Регистрация</h2>\n            <form\n                onSubmit={onSubmit}\n                className=\"register__form\"\n                autoComplete=\"off\"\n            >\n                <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={data.email}\n                    onChange={onChange}\n                    className=\"register__input\"\n                    placeholder=\"Email\"\n                    autocomplete=\"email\"\n                />\n                <input\n                    // id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={data.password}\n                    onChange={onChange}\n                    className=\"register__input\"\n                    placeholder=\"Пароль\"\n                    autocomplete=\"new-password\"\n                />\n                <button type=\"submit\" className=\"register__submit-button\">\n                    Зарегистрироваться\n                </button>\n            </form>\n            <p className=\"register__title\">\n                Уже регистрировались?\n                <Link className=\"register__link\" to=\"/sign-in\">\n                    Войти\n                </Link>\n            </p>\n            <InfoToolTip\n                isOpen={isRegisterPopup}\n                onClose={onClose}\n                name=\"register\"\n                status={submitStatus}\n            >\n                {popupMessage}\n            </InfoToolTip>\n        </div>\n    );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}