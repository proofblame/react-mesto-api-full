{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timurmarokko/Desktop/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    api.setUserInfo(name, about).then(() => {\n      setCurrentUser({ ...currentUser,\n        name: name,\n        about: about\n      });\n    }).then(() => {\n      setIsEditProfilePopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      name: card.name,\n      link: card.link\n    });\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"popup-confirm\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        value: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"popup-add-card\",\n        title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n        defaultValue: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          type: \"text\",\n          defaultValue: \"\",\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n          className: \"popup__input popup__input_title\",\n          minLength: \"2\",\n          maxLength: \"30\",\n          required: true,\n          id: \"name-card\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"name-card-error\",\n          className: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"link\",\n          type: \"url\",\n          defaultValue: \"\",\n          placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n          className: \"popup__input popup__input_link\",\n          required: true,\n          id: \"link\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          id: \"link-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"MmGIkmdTwgyo7KYl3/JVE+GwW28=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/timurmarokko/Desktop/dev/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","Header","Main","Footer","EditProfilePopup","ImagePopup","api","CurrentUserContext","PopupWithForm","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","getUserInfo","then","data","catch","err","console","log","handleUpdateUser","name","about","setUserInfo","handleCardClick","card","link","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(false);\n    const [currentUser, setCurrentUser] = useState({});\n\n    useEffect(() => {\n        api.getUserInfo()\n            .then((data) => {\n                setCurrentUser(data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    function handleUpdateUser({ name, about }) {\n        api.setUserInfo(name, about)\n            .then(() => {\n                setCurrentUser({\n                    ...currentUser,\n                    name: name,\n                    about: about,\n                });\n            })\n            .then(() => {\n                setIsEditProfilePopupOpen(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard({\n            name: card.name,\n            link: card.link,\n        });\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard(false);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"root\">\n                <Header />\n                <Main\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick}\n                />\n                <Footer />\n                <PopupWithForm\n                    name=\"popup-confirm\"\n                    title=\"Вы уверены?\"\n                    value=\"Да\"\n                ></PopupWithForm>\n                <PopupWithForm\n                    name=\"popup-add-card\"\n                    title=\"Новое место\"\n                    defaultValue=\"Сохранить\"\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                >\n                    <input\n                        name=\"name\"\n                        type=\"text\"\n                        defaultValue=\"\"\n                        placeholder=\"Название\"\n                        className=\"popup__input popup__input_title\"\n                        minLength=\"2\"\n                        maxLength=\"30\"\n                        required\n                        id=\"name-card\"\n                        autoComplete=\"off\"\n                    />\n                    <span id=\"name-card-error\" className=\"error\"></span>\n                    <input\n                        name=\"link\"\n                        type=\"url\"\n                        defaultValue=\"\"\n                        placeholder=\"Ссылка на картинку\"\n                        className=\"popup__input popup__input_link\"\n                        required\n                        id=\"link\"\n                        autoComplete=\"off\"\n                    />\n                    <span className=\"error\" id=\"link-error\"></span>\n                </PopupWithForm>\n                <EditAvatarPopup />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}