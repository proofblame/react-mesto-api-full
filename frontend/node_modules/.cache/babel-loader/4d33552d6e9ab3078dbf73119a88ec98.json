{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timurmarokko/Desktop/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport ConfirmPopup from \"./ConfirmPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(false);\n  const [deleteCard, setDeleteCard] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [valueInputSubmit, setValueInputSubmit] = useState({\n    submit: \"Сохранить\",\n    confirm: \"Да\"\n  }); // Получение данных пользователя с сервера\n\n  useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // Получение карточек с сервера\n\n  useEffect(() => {\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //  Закрытие попапа по Esc и клику на оверлей\n\n  useEffect(() => {\n    function handleEscClose(event) {\n      if (event.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n\n    function handleClickOnOverlay(event) {\n      const popup = document.querySelector(\".popup_opened\");\n\n      if (event.target !== popup) {\n        return;\n      }\n\n      closeAllPopups();\n    }\n\n    document.addEventListener(\"click\", handleClickOnOverlay);\n    document.addEventListener(\"keydown\", handleEscClose);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscClose);\n      document.removeEventListener(\"click\", handleClickOnOverlay);\n    };\n  }, []); //  Поставить/снять лайк\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    });\n  } //  Удалить карточку\n\n\n  function handleCardDelete(card) {\n    setValueInputSubmit({ ...valueInputSubmit,\n      confirm: \"Сохранение...\"\n    });\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    }).then(() => {\n      setIsConfirmPopupOpen(false);\n      setValueInputSubmit({ ...valueInputSubmit,\n        confirm: \"Сохранить\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Добавить карточку\n\n\n  function handleAddPlaceSubmit({\n    name,\n    link\n  }) {\n    setValueInputSubmit({ ...valueInputSubmit,\n      submit: \"Сохранение...\"\n    });\n    api.addNewCard(name, link).then(card => {\n      setCards([card, ...cards]);\n    }).then(() => {\n      setValueInputSubmit({ ...valueInputSubmit,\n        submit: \"Сохранить\"\n      });\n      setIsAddPlacePopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Обновить аватар\n\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    setValueInputSubmit(\"Сохранение...\");\n    api.setUserAvatar(avatar).then(() => {\n      setCurrentUser({ ...currentUser,\n        avatar: avatar\n      });\n    }).then(() => {\n      setIsEditAvatarPopupOpen(false);\n      setValueInputSubmit(\"Сохранить\");\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Обновить данные пользователя\n\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    setValueInputSubmit(\"Сохранение...\");\n    api.setUserInfo(name, about).then(() => {\n      setCurrentUser({ ...currentUser,\n        name: name,\n        about: about\n      });\n    }).then(() => {\n      setIsEditProfilePopupOpen(false);\n      setValueInputSubmit(\"Сохранить\");\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Присвоить значения карточке\n\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  } //  Открыть попап редактирования профиля\n\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  } //  Открыть попап добавдения новой карточки\n\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  } //  Открыть попап редактирования аватара\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  } //  Открыть попап подтверждения удаления карточки\n\n\n  function handleDeleteButtonClick(card) {\n    setIsConfirmPopupOpen(true);\n    setDeleteCard(card);\n  } //  Закрыть все попапы\n\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n    setIsConfirmPopupOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), currentUser && /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onConfirmDelete: handleDeleteButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmPopup, {\n        isOpen: isConfirmPopupOpen,\n        onClose: closeAllPopups,\n        onCardDelete: handleCardDelete,\n        card: deleteCard,\n        valueInputSubmit: valueInputSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit,\n        valueInputSubmit: valueInputSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        valueInputSubmit: valueInputSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser,\n        valueInputSubmit: valueInputSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"E2m6kLnHtN9QzY4vDx6Dc7sqBOA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/timurmarokko/Desktop/dev/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","ImagePopup","api","CurrentUserContext","ConfirmPopup","AddPlacePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","deleteCard","setDeleteCard","currentUser","setCurrentUser","cards","setCards","valueInputSubmit","setValueInputSubmit","submit","confirm","getUserInfo","then","data","catch","err","console","log","getInitialCards","handleEscClose","event","key","closeAllPopups","handleClickOnOverlay","popup","document","querySelector","target","addEventListener","removeEventListener","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","filter","handleAddPlaceSubmit","name","link","addNewCard","handleUpdateAvatar","avatar","setUserAvatar","handleUpdateUser","about","setUserInfo","handleCardClick","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleDeleteButtonClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport ConfirmPopup from \"./ConfirmPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(false);\n    const [deleteCard, setDeleteCard] = useState(false);\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [valueInputSubmit, setValueInputSubmit] = useState({submit: \"Сохранить\", confirm: \"Да\"});\n\n    // Получение данных пользователя с сервера\n    useEffect(() => {\n        api.getUserInfo()\n            .then((data) => {\n                setCurrentUser(data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    // Получение карточек с сервера\n    useEffect(() => {\n        api.getInitialCards()\n            .then((cards) => {\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    //  Закрытие попапа по Esc и клику на оверлей\n    useEffect(() => {\n        function handleEscClose(event) {\n            if (event.key === \"Escape\") {\n                closeAllPopups();\n            }\n        }\n\n        function handleClickOnOverlay(event) {\n            const popup = document.querySelector(\".popup_opened\");\n            if (event.target !== popup) {\n                return;\n            }\n            closeAllPopups();\n        }\n\n        document.addEventListener(\"click\", handleClickOnOverlay);\n        document.addEventListener(\"keydown\", handleEscClose);\n\n        return () => {\n            document.removeEventListener(\"keydown\", handleEscClose);\n            document.removeEventListener(\"click\", handleClickOnOverlay);\n        };\n    }, []);\n\n    //  Поставить/снять лайк\n    function handleCardLike(card) {\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            const newCards = cards.map((c) =>\n                c._id === card._id ? newCard : c\n            );\n            setCards(newCards);\n        });\n    }\n\n    //  Удалить карточку\n    function handleCardDelete(card) {\n        setValueInputSubmit({\n            ...valueInputSubmit,\n            confirm: \"Сохранение...\",\n        });\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = cards.filter((c) => c._id !== card._id);\n                setCards(newCards);\n            })\n            .then(() => {\n                setIsConfirmPopupOpen(false);\n                setValueInputSubmit({\n                    ...valueInputSubmit,\n                    confirm: \"Сохранить\",\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    //  Добавить карточку\n    function handleAddPlaceSubmit({ name, link }) {\n        setValueInputSubmit({\n            ...valueInputSubmit,\n            submit: \"Сохранение...\",\n        });\n        api.addNewCard(name, link)\n            .then((card) => {\n                setCards([card, ...cards]);\n            })\n            .then(() => {\n                setValueInputSubmit({\n                    ...valueInputSubmit,\n                    submit: \"Сохранить\",\n                });\n                setIsAddPlacePopupOpen(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    //  Обновить аватар\n    function handleUpdateAvatar({ avatar }) {\n        setValueInputSubmit(\"Сохранение...\");\n        api.setUserAvatar(avatar)\n            .then(() => {\n                setCurrentUser({\n                    ...currentUser,\n                    avatar: avatar,\n                });\n            })\n            .then(() => {\n                setIsEditAvatarPopupOpen(false);\n                setValueInputSubmit(\"Сохранить\");\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    //  Обновить данные пользователя\n    function handleUpdateUser({ name, about }) {\n        setValueInputSubmit(\"Сохранение...\");\n        api.setUserInfo(name, about)\n            .then(() => {\n                setCurrentUser({\n                    ...currentUser,\n                    name: name,\n                    about: about,\n                });\n            })\n            .then(() => {\n                setIsEditProfilePopupOpen(false);\n                setValueInputSubmit(\"Сохранить\");\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    //  Присвоить значения карточке\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    //  Открыть попап редактирования профиля\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n    //  Открыть попап добавдения новой карточки\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n    //  Открыть попап редактирования аватара\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n    //  Открыть попап подтверждения удаления карточки\n    function handleDeleteButtonClick(card) {\n        setIsConfirmPopupOpen(true);\n        setDeleteCard(card);\n    }\n    //  Закрыть все попапы\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard(false);\n        setIsConfirmPopupOpen(false);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"root\">\n                <Header />\n                {currentUser && (\n                    <Main\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onConfirmDelete={handleDeleteButtonClick}\n                    />\n                )}\n                <Footer />\n                <ConfirmPopup\n                    isOpen={isConfirmPopupOpen}\n                    onClose={closeAllPopups}\n                    onCardDelete={handleCardDelete}\n                    card={deleteCard}\n                    valueInputSubmit={valueInputSubmit}\n                />\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                    valueInputSubmit={valueInputSubmit}\n                />\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    valueInputSubmit={valueInputSubmit}\n                />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                    valueInputSubmit={valueInputSubmit}\n                />\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}