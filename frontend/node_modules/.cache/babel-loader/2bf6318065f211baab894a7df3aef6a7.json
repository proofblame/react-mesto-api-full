{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timurmarokko/Desktop/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport ConfirmPopup from \"./ConfirmPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport auth from \"../utils/auth\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(false);\n  const [deleteCard, setDeleteCard] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [valueInput, setValueInput] = useState({\n    submit: \"Сохранить\",\n    confirm: \"Да\"\n  });\n  const [nameError, setNameError] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(\"\");\n  const [formValid, setFormValid] = useState(false);\n  const [nameValid, setNameValid] = useState(false);\n  const [descriptionValid, setDescriptionValid] = useState(false); // Валидация изменения имени и названия\n\n  function checkToken() {\n    const jwt = localStorage.getItem(\"jwt\");\n\n    if (jwt) {\n      auth.getUserData(jwt).then(res => {\n        setLoggedIn(true);\n        setUser({\n          email: res.data.email,\n          id: res.data._id\n        });\n      }).catch(e => console.error(e.message)).finally(() => {\n        setIsChecked(true);\n      });\n    } else {\n      setIsChecked(true);\n    }\n  } // Валидация изменения имени и названия\n\n\n  function handleChangeName(event) {\n    if (event.target.validity.valid) {\n      setNameError(\"\");\n      setNameValid(true);\n    } else {\n      setNameError(event.target.validationMessage);\n      setNameValid(false);\n    }\n  } // Валидация изменения описания и ссылок\n\n\n  function handleChangeDescription(event) {\n    if (event.target.validity.valid) {\n      setDescriptionError(\"\");\n      setDescriptionValid(true);\n    } else {\n      setDescriptionError(event.target.validationMessage);\n      setDescriptionValid(false);\n    }\n  }\n\n  useEffect(() => {\n    if (!nameValid || !descriptionValid) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n\n    return () => {\n      setFormValid(false);\n    };\n  }, [nameValid, descriptionValid]); // useEffect(() => {\n  //     if (nameError || descriptionError) {\n  //         setFormValid(false);\n  //     } else {\n  //         setFormValid(true);\n  //     }\n  // },[nameError, descriptionError]);\n  // Получение данных пользователя с сервера\n\n  useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // Получение карточек с сервера\n\n  useEffect(() => {\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //  Закрытие попапа по Esc и клику на оверлей\n\n  useEffect(() => {\n    function handleEscClose(event) {\n      if (event.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n\n    function handleClickOnOverlay(event) {\n      const popup = document.querySelector(\".popup_opened\");\n\n      if (event.target !== popup) {\n        return;\n      }\n\n      closeAllPopups();\n    }\n\n    document.addEventListener(\"click\", handleClickOnOverlay);\n    document.addEventListener(\"keydown\", handleEscClose);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscClose);\n      document.removeEventListener(\"click\", handleClickOnOverlay);\n    };\n  }, []); //  Поставить/снять лайк\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Удалить карточку\n\n\n  function handleCardDelete(card) {\n    setValueInput({ ...valueInput,\n      confirm: \"Удаление...\"\n    });\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    }).then(() => {\n      closeAllPopups();\n      setValueInput({ ...valueInput,\n        confirm: \"Да\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Добавить карточку\n\n\n  function handleAddPlaceSubmit({\n    name,\n    link\n  }) {\n    setValueInput({ ...valueInput,\n      submit: \"Сохранение...\"\n    });\n    api.addNewCard(name, link).then(card => {\n      setCards([card, ...cards]);\n    }).then(() => {\n      setValueInput({ ...valueInput,\n        submit: \"Сохранить\"\n      });\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Обновить аватар\n\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    setValueInput({ ...valueInput,\n      submit: \"Сохранение...\"\n    });\n    api.setUserAvatar(avatar).then(() => {\n      setCurrentUser({ ...currentUser,\n        avatar: avatar\n      });\n    }).then(() => {\n      closeAllPopups();\n      setValueInput({ ...valueInput,\n        submit: \"Сохранить\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Обновить данные пользователя\n\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    setValueInput({ ...valueInput,\n      submit: \"Сохранение...\"\n    });\n    api.setUserInfo(name, about).then(() => {\n      setCurrentUser({ ...currentUser,\n        name: name,\n        about: about\n      });\n    }).then(() => {\n      closeAllPopups();\n      setValueInput({ ...valueInput,\n        submit: \"Сохранить\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Присвоить значения карточке\n\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  } //  Открыть попап редактирования профиля\n\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  } //  Открыть попап добавдения новой карточки\n\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  } //  Открыть попап редактирования аватара\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n    setNameValid(true);\n  } //  Открыть попап подтверждения удаления карточки\n\n\n  function handleDeleteButtonClick(card) {\n    setIsConfirmPopupOpen(true);\n    setDeleteCard(card);\n    setNameValid(true);\n    setDescriptionValid(true);\n  } //  Закрыть все попапы\n\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n    setIsConfirmPopupOpen(false);\n    setNameValid(false);\n    setDescriptionValid(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), currentUser && /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onConfirmDelete: handleDeleteButtonClick,\n        handleChangeName: handleChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmPopup, {\n        isOpen: isConfirmPopupOpen,\n        onClose: closeAllPopups,\n        onCardDelete: handleCardDelete,\n        card: deleteCard,\n        valueInput: valueInput.confirm,\n        formValid: formValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit,\n        valueInput: valueInput.submit,\n        nameError: nameError,\n        descriptionError: descriptionError,\n        handleChangeName: handleChangeName,\n        handleChangeDescription: handleChangeDescription,\n        formValid: formValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        valueInput: valueInput.submit,\n        descriptionError: descriptionError,\n        handleChangeDescription: handleChangeDescription,\n        formValid: formValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser,\n        valueInput: valueInput.submit,\n        nameError: nameError,\n        descriptionError: descriptionError,\n        handleChangeName: handleChangeName,\n        handleChangeDescription: handleChangeDescription,\n        formValid: formValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Dl7z9k679X/NvcK7hvLiY9POvc4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/timurmarokko/Desktop/dev/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","ImagePopup","api","CurrentUserContext","ConfirmPopup","AddPlacePopup","Register","Login","ProtectedRoute","auth","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","deleteCard","setDeleteCard","currentUser","setCurrentUser","cards","setCards","valueInput","setValueInput","submit","confirm","nameError","setNameError","descriptionError","setDescriptionError","formValid","setFormValid","nameValid","setNameValid","descriptionValid","setDescriptionValid","checkToken","jwt","localStorage","getItem","getUserData","then","res","setLoggedIn","setUser","email","data","id","_id","catch","e","console","error","message","finally","setIsChecked","handleChangeName","event","target","validity","valid","validationMessage","handleChangeDescription","getUserInfo","err","log","getInitialCards","handleEscClose","key","closeAllPopups","handleClickOnOverlay","popup","document","querySelector","addEventListener","removeEventListener","handleCardLike","card","isLiked","likes","some","i","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","filter","handleAddPlaceSubmit","name","link","addNewCard","handleUpdateAvatar","avatar","setUserAvatar","handleUpdateUser","about","setUserInfo","handleCardClick","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleDeleteButtonClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport ConfirmPopup from \"./ConfirmPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport auth from \"../utils/auth\";\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(false);\n    const [deleteCard, setDeleteCard] = useState(false);\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [valueInput, setValueInput] = useState({\n        submit: \"Сохранить\",\n        confirm: \"Да\"\n    });\n\n    const [nameError, setNameError] = useState(\"\");\n    const [descriptionError, setDescriptionError] = useState(\"\");\n    const [formValid, setFormValid] = useState(false);\n    const [nameValid, setNameValid] = useState(false);\n    const [descriptionValid, setDescriptionValid] = useState(false);\n    \n// Валидация изменения имени и названия\n    function checkToken() {\n        const jwt = localStorage.getItem(\"jwt\");\n        if (jwt) {\n            auth.getUserData(jwt)\n                .then((res) => {\n                    setLoggedIn(true);\n                    setUser({\n                        email: res.data.email,\n                        id: res.data._id\n                    });\n                })\n                .catch((e) => console.error(e.message))\n                .finally(() => {\n                    setIsChecked(true);\n                });\n        } else {\n            setIsChecked(true);\n        }\n    }\n\n    // Валидация изменения имени и названия\n    function handleChangeName(event) {\n        if (event.target.validity.valid) {\n            setNameError(\"\");\n            setNameValid(true);\n        } else {\n            setNameError(event.target.validationMessage);\n            setNameValid(false);\n        }\n    }\n    // Валидация изменения описания и ссылок\n    function handleChangeDescription(event) {\n        if (event.target.validity.valid) {\n            setDescriptionError(\"\");\n            setDescriptionValid(true);\n        } else {\n            setDescriptionError(event.target.validationMessage);\n            setDescriptionValid(false);\n        }\n    }\n\n    useEffect(() => {\n        if (!nameValid || !descriptionValid) {\n            setFormValid(false);\n        } else {\n            setFormValid(true);\n        }\n        return () => {\n            setFormValid(false);\n        };\n    }, [nameValid, descriptionValid]);\n\n    // useEffect(() => {\n    //     if (nameError || descriptionError) {\n    //         setFormValid(false);\n    //     } else {\n    //         setFormValid(true);\n    //     }\n    // },[nameError, descriptionError]);\n\n    // Получение данных пользователя с сервера\n    useEffect(() => {\n        api.getUserInfo()\n            .then((data) => {\n                setCurrentUser(data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    // Получение карточек с сервера\n    useEffect(() => {\n        api.getInitialCards()\n            .then((cards) => {\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    //  Закрытие попапа по Esc и клику на оверлей\n    useEffect(() => {\n        function handleEscClose(event) {\n            if (event.key === \"Escape\") {\n                closeAllPopups();\n            }\n        }\n\n        function handleClickOnOverlay(event) {\n            const popup = document.querySelector(\".popup_opened\");\n            if (event.target !== popup) {\n                return;\n            }\n            closeAllPopups();\n        }\n\n        document.addEventListener(\"click\", handleClickOnOverlay);\n        document.addEventListener(\"keydown\", handleEscClose);\n\n        return () => {\n            document.removeEventListener(\"keydown\", handleEscClose);\n            document.removeEventListener(\"click\", handleClickOnOverlay);\n        };\n    }, []);\n\n    //  Поставить/снять лайк\n    function handleCardLike(card) {\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                const newCards = cards.map((c) =>\n                    c._id === card._id ? newCard : c\n                );\n                setCards(newCards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    //  Удалить карточку\n    function handleCardDelete(card) {\n        setValueInput({\n            ...valueInput,\n            confirm: \"Удаление...\"\n        });\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = cards.filter((c) => c._id !== card._id);\n                setCards(newCards);\n            })\n            .then(() => {\n                closeAllPopups();\n                setValueInput({\n                    ...valueInput,\n                    confirm: \"Да\"\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    //  Добавить карточку\n    function handleAddPlaceSubmit({ name, link }) {\n        setValueInput({\n            ...valueInput,\n            submit: \"Сохранение...\"\n        });\n        api.addNewCard(name, link)\n            .then((card) => {\n                setCards([card, ...cards]);\n            })\n            .then(() => {\n                setValueInput({\n                    ...valueInput,\n                    submit: \"Сохранить\"\n                });\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    //  Обновить аватар\n    function handleUpdateAvatar({ avatar }) {\n        setValueInput({\n            ...valueInput,\n            submit: \"Сохранение...\"\n        });\n        api.setUserAvatar(avatar)\n            .then(() => {\n                setCurrentUser({\n                    ...currentUser,\n                    avatar: avatar\n                });\n            })\n            .then(() => {\n                closeAllPopups();\n                setValueInput({\n                    ...valueInput,\n                    submit: \"Сохранить\"\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    //  Обновить данные пользователя\n    function handleUpdateUser({ name, about }) {\n        setValueInput({\n            ...valueInput,\n            submit: \"Сохранение...\"\n        });\n        api.setUserInfo(name, about)\n            .then(() => {\n                setCurrentUser({\n                    ...currentUser,\n                    name: name,\n                    about: about\n                });\n            })\n            .then(() => {\n                closeAllPopups();\n                setValueInput({\n                    ...valueInput,\n                    submit: \"Сохранить\"\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    //  Присвоить значения карточке\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    //  Открыть попап редактирования профиля\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n    //  Открыть попап добавдения новой карточки\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n    //  Открыть попап редактирования аватара\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n        setNameValid(true);\n    }\n    //  Открыть попап подтверждения удаления карточки\n    function handleDeleteButtonClick(card) {\n        setIsConfirmPopupOpen(true);\n        setDeleteCard(card);\n        setNameValid(true);\n        setDescriptionValid(true);\n    }\n    //  Закрыть все попапы\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard(false);\n        setIsConfirmPopupOpen(false);\n        setNameValid(false);\n        setDescriptionValid(false);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"root\">\n                <Header />\n                {currentUser && (\n                    <Main\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onConfirmDelete={handleDeleteButtonClick}\n                        handleChangeName={handleChangeName}\n                    />\n                )}\n                <Footer />\n                <ConfirmPopup\n                    isOpen={isConfirmPopupOpen}\n                    onClose={closeAllPopups}\n                    onCardDelete={handleCardDelete}\n                    card={deleteCard}\n                    valueInput={valueInput.confirm}\n                    formValid={formValid}\n                />\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                    valueInput={valueInput.submit}\n                    nameError={nameError}\n                    descriptionError={descriptionError}\n                    handleChangeName={handleChangeName}\n                    handleChangeDescription={handleChangeDescription}\n                    formValid={formValid}\n                />\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    valueInput={valueInput.submit}\n                    descriptionError={descriptionError}\n                    handleChangeDescription={handleChangeDescription}\n                    formValid={formValid}\n                />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                    valueInput={valueInput.submit}\n                    nameError={nameError}\n                    descriptionError={descriptionError}\n                    handleChangeName={handleChangeName}\n                    handleChangeDescription={handleChangeDescription}\n                    formValid={formValid}\n                />\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}