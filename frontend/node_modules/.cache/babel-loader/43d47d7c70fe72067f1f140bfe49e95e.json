{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timurmarokko/Desktop/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]); //  Поставить/снять лайк\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    });\n  } //  Удалить карточку\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    });\n  } // function handleAddPlaceSubmit({ name, link }) {\n  //     api.addNewCard(name, link)\n  //         .then(() => {\n  //             setCards([newCard, ...cards]);\n  //         })\n  //         .then(() => {\n  //             setIsAddPlacePopupOpen(false);\n  //         })\n  //         .catch((err) => {\n  //             console.log(err);\n  //         });\n  // }\n\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    api.setUserAvatar(avatar).then(() => {\n      setCurrentUser({ ...currentUser,\n        avatar: avatar\n      });\n    }).then(() => {\n      setIsEditAvatarPopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    api.setUserInfo(name, about).then(() => {\n      setCurrentUser({ ...currentUser,\n        name: name,\n        about: about\n      });\n    }).then(() => {\n      setIsEditProfilePopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      name: card.name,\n      link: card.link\n    });\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n  } // Получение карточек с сервера\n\n\n  useEffect(() => {\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // Получение данных пользователя с сервера\n\n  useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"popup-confirm\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        value: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"j7y9GaznKzV+fnpBKeQrUsDQMuI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/timurmarokko/Desktop/dev/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","ImagePopup","api","CurrentUserContext","PopupWithForm","AddPlacePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","newCards","map","c","handleCardDelete","deleteCard","filter","handleUpdateAvatar","avatar","setUserAvatar","catch","err","console","log","handleUpdateUser","name","about","setUserInfo","handleCardClick","link","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups","getInitialCards","getUserInfo","data","handleAddPlaceSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(false);\n    const [currentUser, setCurrentUser] = useState({});\n\n    const [cards, setCards] = useState([]);\n\n    //  Поставить/снять лайк\n    function handleCardLike(card) {\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            const newCards = cards.map((c) =>\n                c._id === card._id ? newCard : c\n            );\n            setCards(newCards);\n        });\n    }\n\n    //  Удалить карточку\n    function handleCardDelete(card) {\n        api.deleteCard(card._id).then(() => {\n            const newCards = cards.filter((c) => c._id !== card._id);\n            setCards(newCards);\n        });\n    }\n\n    // function handleAddPlaceSubmit({ name, link }) {\n    //     api.addNewCard(name, link)\n    //         .then(() => {\n    //             setCards([newCard, ...cards]);\n    //         })\n    //         .then(() => {\n    //             setIsAddPlacePopupOpen(false);\n    //         })\n    //         .catch((err) => {\n    //             console.log(err);\n    //         });\n    // }\n\n    function handleUpdateAvatar({ avatar }) {\n        api.setUserAvatar(avatar)\n            .then(() => {\n                setCurrentUser({\n                    ...currentUser,\n                    avatar: avatar,\n                });\n            })\n            .then(() => {\n                setIsEditAvatarPopupOpen(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    function handleUpdateUser({ name, about }) {\n        api.setUserInfo(name, about)\n            .then(() => {\n                setCurrentUser({\n                    ...currentUser,\n                    name: name,\n                    about: about,\n                });\n            })\n            .then(() => {\n                setIsEditProfilePopupOpen(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard({\n            name: card.name,\n            link: card.link,\n        });\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard(false);\n    }\n\n    // Получение карточек с сервера\n    useEffect(() => {\n        api.getInitialCards()\n            .then((cards) => {\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    // Получение данных пользователя с сервера\n    useEffect(() => {\n        api.getUserInfo()\n            .then((data) => {\n                setCurrentUser(data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"root\">\n                <Header />\n                <Main\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick}\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                />\n                <Footer />\n                <PopupWithForm\n                    name=\"popup-confirm\"\n                    title=\"Вы уверены?\"\n                    value=\"Да\"\n                ></PopupWithForm>\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}