{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timurmarokko/Desktop/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport ConfirmPopup from \"./ConfirmPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]); // Получение данных пользователя с сервера\n\n  useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // Получение карточек с сервера\n\n  useEffect(() => {\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //  Поставить/снять лайк\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    });\n  } //  Удалить карточку\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    });\n  } //  Добавить карточку\n\n\n  function handleAddPlaceSubmit({\n    name,\n    link\n  }) {\n    api.addNewCard(name, link).then(card => {\n      setCards([card, ...cards]);\n    }).then(() => {\n      setIsAddPlacePopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Обновить аватар\n\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    api.setUserAvatar(avatar).then(() => {\n      setCurrentUser({ ...currentUser,\n        avatar: avatar\n      });\n    }).then(() => {\n      setIsEditAvatarPopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Обновить данные пользователя\n\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    api.setUserInfo(name, about).then(() => {\n      setCurrentUser({ ...currentUser,\n        name: name,\n        about: about\n      });\n    }).then(() => {\n      setIsEditProfilePopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  } //  Открыть/закрыть карточку\n\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), currentUser && /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"j7y9GaznKzV+fnpBKeQrUsDQMuI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/timurmarokko/Desktop/dev/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","ImagePopup","api","CurrentUserContext","ConfirmPopup","AddPlacePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","getUserInfo","then","data","catch","err","console","log","getInitialCards","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit","name","link","addNewCard","handleUpdateAvatar","avatar","setUserAvatar","handleUpdateUser","about","setUserInfo","handleCardClick","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport ConfirmPopup from \"./ConfirmPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(false);\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n\n    // Получение данных пользователя с сервера\n    useEffect(() => {\n        api.getUserInfo()\n            .then((data) => {\n                setCurrentUser(data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    // Получение карточек с сервера\n    useEffect(() => {\n        api.getInitialCards()\n            .then((cards) => {\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    //  Поставить/снять лайк\n    function handleCardLike(card) {\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            const newCards = cards.map((c) =>\n                c._id === card._id ? newCard : c\n            );\n            setCards(newCards);\n        });\n    }\n\n    //  Удалить карточку\n    function handleCardDelete(card) {\n        api.deleteCard(card._id).then(() => {\n            const newCards = cards.filter((c) => c._id !== card._id);\n            setCards(newCards);\n        });\n    }\n    //  Добавить карточку\n    function handleAddPlaceSubmit({ name, link }) {\n        api.addNewCard(name, link)\n            .then((card) => {\n                setCards([card, ...cards]);\n            })\n            .then(() => {\n                setIsAddPlacePopupOpen(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    //  Обновить аватар\n    function handleUpdateAvatar({ avatar }) {\n        api.setUserAvatar(avatar)\n            .then(() => {\n                setCurrentUser({\n                    ...currentUser,\n                    avatar: avatar,\n                });\n            })\n            .then(() => {\n                setIsEditAvatarPopupOpen(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    //  Обновить данные пользователя\n    function handleUpdateUser({ name, about }) {\n        api.setUserInfo(name, about)\n            .then(() => {\n                setCurrentUser({\n                    ...currentUser,\n                    name: name,\n                    about: about,\n                });\n            })\n            .then(() => {\n                setIsEditProfilePopupOpen(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    //  Открыть/закрыть карточку\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard(false);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"root\">\n                <Header />\n                {currentUser && (\n                    <Main\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                    />\n                )}\n                <Footer />\n\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}